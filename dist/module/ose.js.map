{"version":3,"file":"ose.js","sources":["../src/module/config.js","../src/module/item/item-sheet.js","../src/module/dialog/entity-tweaks.js","../src/module/actor/actor-sheet.js","../src/module/dialog/character-modifiers.js","../src/module/dice.js","../src/module/dialog/character-creation.js","../src/module/actor/character-sheet.js","../src/module/actor/monster-sheet.js","../src/module/preloadTemplates.js","../src/module/item/entity.js","../src/module/actor/entity.js","../src/module/settings.js","../src/module/helpers.js","../src/module/fvttModuleAPIs.js","../src/module/chat.js","../src/module/treasure.js","../src/module/macros.js","../src/module/party/party.js","../src/module/party/party-xp.js","../src/module/party/party-sheet.js","../src/module/party.js","../src/module/combat.js","../src/module/renderList.js","../src/ose.js"],"sourcesContent":["export const OSE = {\n  systemPath: () => {\n    return `/systems/${game.system.id}/dist`;\n  },\n  scores: {\n    str: \"OSE.scores.str.long\",\n    int: \"OSE.scores.int.long\",\n    dex: \"OSE.scores.dex.long\",\n    wis: \"OSE.scores.wis.long\",\n    con: \"OSE.scores.con.long\",\n    cha: \"OSE.scores.cha.long\",\n  },\n  scores_short: {\n    str: \"OSE.scores.str.short\",\n    int: \"OSE.scores.int.short\",\n    dex: \"OSE.scores.dex.short\",\n    wis: \"OSE.scores.wis.short\",\n    con: \"OSE.scores.con.short\",\n    cha: \"OSE.scores.cha.short\",\n  },\n  exploration_skills: {\n    ld: \"OSE.exploration.ld.long\",\n    od: \"OSE.exploration.od.long\",\n    sd: \"OSE.exploration.sd.long\",\n    fs: \"OSE.exploration.ft.long\",\n  },\n  exploration_skills_short: {\n    ld: \"OSE.exploration.ld.abrev\",\n    od: \"OSE.exploration.od.abrev\",\n    sd: \"OSE.exploration.sd.abrev\",\n    fs: \"OSE.exploration.ft.abrev\",\n  },\n  roll_type: {\n    result: \"=\",\n    above: \"≥\",\n    below: \"≤\",\n  },\n  saves_short: {\n    death: \"OSE.saves.death.short\",\n    wand: \"OSE.saves.wand.short\",\n    paralysis: \"OSE.saves.paralysis.short\",\n    breath: \"OSE.saves.breath.short\",\n    spell: \"OSE.saves.spell.short\",\n  },\n  saves_long: {\n    death: \"OSE.saves.death.long\",\n    wand: \"OSE.saves.wand.long\",\n    paralysis: \"OSE.saves.paralysis.long\",\n    breath: \"OSE.saves.breath.long\",\n    spell: \"OSE.saves.spell.long\",\n  },\n  armor: {\n    unarmored: \"OSE.armor.unarmored\",\n    light: \"OSE.armor.light\",\n    heavy: \"OSE.armor.heavy\",\n    shield: \"OSE.armor.shield\",\n  },\n  colors: {\n    green: \"OSE.colors.green\",\n    red: \"OSE.colors.red\",\n    yellow: \"OSE.colors.yellow\",\n    purple: \"OSE.colors.purple\",\n    blue: \"OSE.colors.blue\",\n    orange: \"OSE.colors.orange\",\n    white: \"OSE.colors.white\",\n  },\n  languages: [\n    \"Common\",\n    \"Lawful\",\n    \"Chaotic\",\n    \"Neutral\",\n    \"Bugbear\",\n    \"Doppelgänger\",\n    \"Dragon\",\n    \"Dwarvish\",\n    \"Elvish\",\n    \"Gargoyle\",\n    \"Gnoll\",\n    \"Gnomish\",\n    \"Goblin\",\n    \"Halfling\",\n    \"Harpy\",\n    \"Hobgoblin\",\n    \"Kobold\",\n    \"Lizard Man\",\n    \"Medusa\",\n    \"Minotaur\",\n    \"Ogre\",\n    \"Orcish\",\n    \"Pixie\",\n  ],\n  tags: {\n    melee: \"OSE.items.Melee\",\n    missile: \"OSE.items.Missile\",\n    slow: \"OSE.items.Slow\",\n    twohanded: \"OSE.items.TwoHanded\",\n    blunt: \"OSE.items.Blunt\",\n    brace: \"OSE.items.Brace\",\n    splash: \"OSE.items.Splash\",\n    reload: \"OSE.items.Reload\",\n    charge: \"OSE.items.Charge\",\n  },\n  tag_images: {\n    melee: \"systems/ose/assets/melee.png\",\n    missile: \"systems/ose/assets/missile.png\",\n    slow: \"systems/ose/assets/slow.png\",\n    twohanded: \"systems/ose/assets/twohanded.png\",\n    blunt: \"systems/ose/assets/blunt.png\",\n    brace: \"systems/ose/assets/brace.png\",\n    splash: \"systems/ose/assets/splash.png\",\n    reload: \"systems/ose/assets/reload.png\",\n    charge: \"systems/ose/assets/charge.png\",\n  },\n  monster_saves: {\n    0: {\n      d: 14,\n      w: 15,\n      p: 16,\n      b: 17,\n      s: 18,\n    },\n    1: {\n      d: 12,\n      w: 13,\n      p: 14,\n      b: 15,\n      s: 16,\n    },\n    4: {\n      d: 10,\n      w: 11,\n      p: 12,\n      b: 13,\n      s: 14,\n    },\n    7: {\n      d: 8,\n      w: 9,\n      p: 10,\n      b: 10,\n      s: 12,\n    },\n    10: {\n      d: 6,\n      w: 7,\n      p: 8,\n      b: 8,\n      s: 10,\n    },\n    13: {\n      d: 4,\n      w: 5,\n      p: 6,\n      b: 5,\n      s: 8,\n    },\n    16: {\n      d: 2,\n      w: 3,\n      p: 4,\n      b: 3,\n      s: 6,\n    },\n    19: {\n      d: 2,\n      w: 2,\n      p: 2,\n      b: 2,\n      s: 4,\n    },\n    22: {\n      d: 2,\n      w: 2,\n      p: 2,\n      b: 2,\n      s: 2,\n    },\n  },\n  monster_thac0: {\n    0: 20,\n    1: 19,\n    2: 18,\n    3: 17,\n    4: 16,\n    5: 15,\n    6: 14,\n    7: 13,\n    9: 12,\n    10: 11,\n    12: 10,\n    14: 9,\n    16: 8,\n    18: 7,\n    20: 6,\n    22: 5,\n  },\n};\n","import { OSE } from \"../config\";\n\n/**\n * Extend the basic ItemSheet with some very simple modifications\n */\nexport class OseItemSheet extends ItemSheet {\n  constructor(...args) {\n    super(...args);\n\n    /**\n     * Keep track of the currently active sheet tab\n     * @type {string}\n     */\n  }\n\n  /**\n   * Extend and override the default options used by the Simple Item Sheet\n   * @returns {Object}\n   */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"ose\", \"sheet\", \"item\"],\n      width: 520,\n      height: 390,\n      resizable: false,\n      tabs: [\n        {\n          navSelector: \".tabs\",\n          contentSelector: \".sheet-body\",\n          initial: \"description\",\n        },\n      ],\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  get template() {\n    const path = `${OSE.systemPath()}/templates/items/`;\n    return `${path}/${this.item.data.type}-sheet.html`;\n  }\n\n  /**\n   * Prepare data for rendering the Item sheet\n   * The prepared data object contains both the actor data as well as additional sheet options\n   */\n  getData() {\n    const data = super.getData().data;\n    data.editable = this.document.sheet.isEditable;\n    data.config = CONFIG.OSE;\n    return data;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   * @param html {HTML}   The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    html.find('input[data-action=\"add-tag\"]').keypress((ev) => {\n      if (ev.which == 13) {\n        let value = $(ev.currentTarget).val();\n        let values = value.split(\",\");\n        this.object.pushManualTag(values);\n      }\n    });\n    html.find(\".tag-delete\").click((ev) => {\n      let value = ev.currentTarget.parentElement.dataset.tag;\n      this.object.popManualTag(value);\n    });\n    html.find(\"a.melee-toggle\").click(() => {\n      this.object.update({ data: { melee: !this.object.data.data.melee } });\n    });\n\n    html.find(\"a.missile-toggle\").click(() => {\n      this.object.update({ data: { missile: !this.object.data.data.missile } });\n    });\n\n    super.activateListeners(html);\n  }\n}\n","import { OSE } from \"../config\";\n\nexport class OseEntityTweaks extends FormApplication {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    options.id = \"sheet-tweaks\";\n    options.template = `${OSE.systemPath()}/templates/actors/dialogs/tweaks-dialog.html`;\n    options.width = 380;\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add the Entity name into the window title\n   * @type {String}\n   */\n  get title() {\n    return `${this.object.name}: ${game.i18n.localize(\"OSE.dialog.tweaks\")}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Construct and return the data object used to render the HTML template for this form application.\n   * @return {Object}\n   */\n  getData() {\n    const data = foundry.utils.deepClone(this.object.data);\n    if (data.type === \"character\") {\n      data.isCharacter = true;\n    }\n    data.user = game.user;\n    data.config = {\n      ...CONFIG.OSE,\n      ascendingAC: game.settings.get(\"ose\", \"ascendingAC\"),\n    };\n    return data;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n\n  /**\n   * This method is called upon form submission after form data is validated\n   * @param event {Event}       The initial triggering submission event\n   * @param formData {Object}   The object of validated form data with which to update the object\n   * @private\n   */\n  async _updateObject(event, formData) {\n    event.preventDefault();\n    // Update the actor\n    this.object.update(formData);\n    // Re-draw the updated sheet\n    this.object.sheet.render(true);\n  }\n}\n","import { OseEntityTweaks } from \"../dialog/entity-tweaks\";\nimport { OSE } from \"../config\";\n\nexport class OseActorSheet extends ActorSheet {\n  constructor(...args) {\n    super(...args);\n  }\n  /* -------------------------------------------- */\n\n  getData() {\n    const data = foundry.utils.deepClone(super.getData().data);\n    data.owner = this.actor.isOwner;\n    data.editable = this.actor.sheet.isEditable;\n\n    data.config = {\n      ...CONFIG.OSE,\n      ascendingAC: game.settings.get(\"ose\", \"ascendingAC\"),\n      initiative: game.settings.get(\"ose\", \"initiative\") != \"group\",\n      encumbrance: game.settings.get(\"ose\", \"encumbranceOption\"),\n    };\n    data.isNew = this.actor.isNew();\n\n    return data;\n  }\n\n  activateEditor(name, options, initialContent) {\n    // remove some controls to the editor as the space is lacking\n    if (name == \"data.details.description\") {\n      options.toolbar = \"styleselect bullist hr table removeFormat save\";\n    }\n    super.activateEditor(name, options, initialContent);\n  }\n\n  // Helpers\n\n  _getItemFromActor(event) {\n    const li = event.currentTarget.closest(\".item-entry\");\n    const item = this.actor.items.get(li.dataset.itemId);\n\n    return item;\n  }\n\n  // end Helpers\n\n  _toggleItemCategory(event) {\n    event.preventDefault();\n    const targetCategory = $(event.currentTarget);\n    let items = targetCategory.next(\".item-list\");\n\n    if (items.css(\"display\") === \"none\") {\n      let el = $(event.currentTarget).find(\".fas.fa-caret-right\");\n      el.removeClass(\"fa-caret-right\");\n      el.addClass(\"fa-caret-down\");\n\n      items.slideDown(200);\n    } else {\n      let el = $(event.currentTarget).find(\".fas.fa-caret-down\");\n      el.removeClass(\"fa-caret-down\");\n      el.addClass(\"fa-caret-right\");\n\n      items.slideUp(200);\n    }\n  }\n\n  _toggleContainedItems(event) {\n    event.preventDefault();\n    const targetItems = $(event.target.closest(\".container\"));\n    let items = targetItems.find(\".item-list.contained-items\");\n\n    if (items.css(\"display\") === \"none\") {\n      let el = targetItems.find(\".fas.fa-caret-right\");\n      el.removeClass(\"fa-caret-right\");\n      el.addClass(\"fa-caret-down\");\n\n      items.slideDown(200);\n    } else {\n      let el = targetItems.find(\".fas.fa-caret-down\");\n      el.removeClass(\"fa-caret-down\");\n      el.addClass(\"fa-caret-right\");\n\n      items.slideUp(200);\n    }\n  }\n\n  _toggleItemSummary(event) {\n    event.preventDefault();\n    const summary = $(event.currentTarget)\n      .closest(\".item-header\")\n      .next(\".item-summary\");\n\n    if (summary.css(\"display\") === \"none\") {\n      summary.slideDown(200);\n    } else {\n      summary.slideUp(200);\n    }\n  }\n\n  async _displayItemInChat(event) {\n    const li = $(event.currentTarget).closest(\".item-entry\");\n    const item = this.actor.items.get(li.data(\"itemId\"));\n    item.show();\n  }\n\n  async _removeItemFromActor(event) {\n    const item = this._getItemFromActor(event);\n    const itemDisplay = event.currentTarget.closest(\".item-entry\");\n\n    if (item.type === \"container\" && item.data.data.itemIds) {\n      const containedItems = item.data.data.itemIds;\n      const updateData = containedItems.reduce((acc, val) => {\n        acc.push({ _id: val.id, \"data.containerId\": \"\" });\n        return acc;\n      }, []);\n\n      await this.actor.updateEmbeddedDocuments(\"Item\", updateData);\n    }\n    this.actor.deleteEmbeddedDocuments(\"Item\", [itemDisplay.dataset.itemId]);\n  }\n\n  /**\n   * @param {bool} decrement\n   */\n  _useConsumable(event, decrement) {\n    const item = this._getItemFromActor(event);\n\n    if (decrement) {\n      item.update({ \"data.quantity.value\": item.data.data.quantity.value - 1 });\n    } else {\n      item.update({ \"data.quantity.value\": item.data.data.quantity.value + 1 });\n    }\n  }\n\n  async _onSpellChange(event) {\n    event.preventDefault();\n    const item = this._getItemFromActor(event);\n    if (event.target.dataset.field == \"cast\") {\n      return item.update({ \"data.cast\": parseInt(event.target.value) });\n    } else if (event.target.dataset.field == \"memorize\") {\n      return item.update({\n        \"data.memorized\": parseInt(event.target.value),\n      });\n    }\n  }\n\n  async _resetSpells(event) {\n    let spells = $(event.currentTarget)\n      .closest(\".inventory.spells\")\n      .find(\".item-entry\");\n    spells.each((_, el) => {\n      let itemId = el.dataset.itemId;\n      const item = this.actor.items.get(itemId);\n      item.update({\n        _id: item.id,\n        \"data.cast\": item.data.data.memorized,\n      });\n    });\n  }\n\n  async _rollAbility(event) {\n    const item = this._getItemFromActor(event);\n    if (item.type == \"weapon\") {\n      if (this.actor.data.type === \"monster\") {\n        item.update({\n          data: { counter: { value: item.data.data.counter.value - 1 } },\n        });\n      }\n      item.rollWeapon({ skipDialog: event.ctrlKey || event.metaKey });\n    } else if (item.type == \"spell\") {\n      item.spendSpell({ skipDialog: event.ctrlKey || event.metaKey });\n    } else {\n      item.rollFormula({ skipDialog: event.ctrlKey || event.metaKey });\n    }\n  }\n\n  async _rollSave(event) {\n    let actorObject = this.actor;\n    let element = event.currentTarget;\n    let save = element.parentElement.parentElement.dataset.save;\n    actorObject.rollSave(save, { event: event });\n  }\n\n  async _rollAttack(event) {\n    let actorObject = this.actor;\n    let element = event.currentTarget;\n    let attack = element.parentElement.parentElement.dataset.attack;\n    const rollData = {\n      actor: this.data,\n      roll: {},\n    };\n    actorObject.targetAttack(rollData, attack, {\n      type: attack,\n      skipDialog: event.ctrlKey || event.metaKey,\n    });\n  }\n\n  _onSortItem(event, itemData) {\n    const source = this.actor.items.get(itemData._id);\n    const siblings = this.actor.items.filter((i) => {\n      return i.data._id !== source.data._id;\n    });\n    const dropTarget = event.target.closest(\"[data-item-id]\");\n    const targetId = dropTarget ? dropTarget.dataset.itemId : null;\n    const target = siblings.find((s) => s.data._id === targetId);\n\n    // Dragging items into a container\n    if (\n      target?.data.type === \"container\" &&\n      target?.data.data.containerId === \"\"\n    ) {\n      this.actor.updateEmbeddedDocuments(\"Item\", [\n        { _id: source.id, \"data.containerId\": target.id },\n      ]);\n      return;\n    }\n    if (source?.data.containerId !== \"\") {\n      this.actor.updateEmbeddedDocuments(\"Item\", [\n        { _id: source.id, \"data.containerId\": \"\" },\n      ]);\n    }\n\n    super._onSortItem(event, itemData);\n  }\n\n  _onDragStart(event) {\n    const li = event.currentTarget;\n    let itemIdsArray = [];\n    if (event.target.classList.contains(\"content-link\")) return;\n\n    // Create drag data\n    const dragData = {\n      actorId: this.actor.id,\n      sceneId: this.actor.isToken ? canvas.scene?.id : null,\n      tokenId: this.actor.isToken ? this.actor.token.id : null,\n      pack: this.actor.pack,\n    };\n\n    // Owned Items\n    if (li.dataset.itemId) {\n      const item = this.actor.items.get(li.dataset.itemId);\n      dragData.type = \"Item\";\n      dragData.data = item.data;\n      if (item.data.type === \"container\" && item.data.data.itemIds.length) {\n        //otherwise JSON.stringify will quadruple stringify for some reason\n        itemIdsArray = item.data.data.itemIds;\n      }\n    }\n\n    // Active Effect\n    if (li.dataset.effectId) {\n      const effect = this.actor.effects.get(li.dataset.effectId);\n      dragData.type = \"ActiveEffect\";\n      dragData.data = effect.data;\n    }\n\n    // Set data transfer\n    event.dataTransfer.setData(\n      \"text/plain\",\n      JSON.stringify(dragData, (key, value) => {\n        if (key === \"itemIds\") {\n          //something about how this Array is created makes its elements not real Array elements\n          //we go through this hoop to trick stringify into creating our string\n          return JSON.stringify(itemIdsArray);\n        }\n        return value;\n      })\n    );\n  }\n\n  async _onDropItemCreate(itemData) {\n    //override to fix hidden items because their original containers don't exist on this actor\n    itemData = itemData instanceof Array ? itemData : [itemData];\n    itemData.forEach((item) => {\n      if (item.data.containerId && item.data.containerId !== \"\")\n        item.data.containerId = \"\";\n      if (item.type === \"container\" && typeof item.data.itemIds === \"string\") {\n        //itemIds was double stringified to fix strange behavior with stringify blanking our Arrays\n        const containedItems = JSON.parse(item.data.itemIds);\n        containedItems.forEach((containedItem) => {\n          containedItem.data.containerId = \"\";\n        });\n        itemData.push(...containedItems);\n      }\n    });\n    return this.actor.createEmbeddedDocuments(\"Item\", itemData);\n  }\n\n  /* -------------------------------------------- */\n\n  async _chooseItemType(choices = [\"weapon\", \"armor\", \"shield\", \"gear\"]) {\n    let templateData = { types: choices },\n      dlg = await renderTemplate(\n        `${OSE.systemPath()}/templates/items/entity-create.html`,\n        templateData\n      );\n    //Create Dialog window\n    return new Promise((resolve) => {\n      new Dialog({\n        title: game.i18n.localize(\"OSE.dialog.createItem\"),\n        content: dlg,\n        buttons: {\n          ok: {\n            label: game.i18n.localize(\"OSE.Ok\"),\n            icon: '<i class=\"fas fa-check\"></i>',\n            callback: (html) => {\n              resolve({\n                type: html.find('select[name=\"type\"]').val(),\n                name: html.find('input[name=\"name\"]').val(),\n              });\n            },\n          },\n          cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: game.i18n.localize(\"OSE.Cancel\"),\n          },\n        },\n        default: \"ok\",\n      }).render(true);\n    });\n  }\n\n  _createItem(event) {\n    event.preventDefault();\n    const header = event.currentTarget;\n    const type = header.dataset.type;\n\n    // item creation helper func\n    const createItem = function (type, name) {\n      const itemData = {\n        name: name ? name : `New ${type.capitalize()}`,\n        type: type,\n        data: duplicate(header.dataset),\n      };\n      delete itemData.data[\"type\"];\n      return itemData;\n    };\n\n    // Getting back to main logic\n    if (type === \"choice\") {\n      const choices = header.dataset.choices.split(\",\");\n      this._chooseItemType(choices).then((dialogInput) => {\n        const itemData = createItem(dialogInput.type, dialogInput.name);\n        this.actor.createEmbeddedDocuments(\"Item\", [itemData], {});\n      });\n    } else {\n      const itemData = createItem(type);\n      return this.actor.createEmbeddedDocuments(\"Item\", [itemData], {});\n    }\n  }\n\n  async _updateItemQuantity(event) {\n    event.preventDefault();\n    const item = this._getItemFromActor(event);\n\n    if (event.target.dataset.field === \"value\") {\n      return item.update({\n        \"data.quantity.value\": parseInt(event.target.value),\n      });\n    } else if (event.target.dataset.field === \"max\") {\n      return item.update({\n        \"data.quantity.max\": parseInt(event.target.value),\n      });\n    }\n  }\n\n  // Override to set resizable initial size\n  async _renderInner(...args) {\n    const html = await super._renderInner(...args);\n    this.form = html[0];\n\n    // Resize resizable classes\n    let resizable = html.find(\".resizable\");\n    if (resizable.length == 0) {\n      return;\n    }\n    resizable.each((_, el) => {\n      let heightDelta = this.position.height - this.options.height;\n      el.style.height = `${heightDelta + parseInt(el.dataset.baseSize)}px`;\n    });\n    return html;\n  }\n\n  async _onResize(event) {\n    super._onResize(event);\n\n    let html = $(this.form);\n    let resizable = html.find(\".resizable\");\n    if (resizable.length == 0) {\n      return;\n    }\n    // Resize divs\n    resizable.each((_, el) => {\n      let heightDelta = this.position.height - this.options.height;\n      el.style.height = `${heightDelta + parseInt(el.dataset.baseSize)}px`;\n    });\n    // Resize editors\n    let editors = html.find(\".editor\");\n    editors.each((id, editor) => {\n      let container = editor.closest(\".resizable-editor\");\n      if (container) {\n        let heightDelta = this.position.height - this.options.height;\n        editor.style.height = `${\n          heightDelta + parseInt(container.dataset.editorSize)\n        }px`;\n      }\n    });\n  }\n\n  _onConfigureActor(event) {\n    event.preventDefault();\n    new OseEntityTweaks(this.actor, {\n      top: this.position.top + 40,\n      left: this.position.left + (this.position.width - 400) / 2,\n    }).render(true);\n  }\n\n  /**\n   * Extend and override the sheet header buttons\n   * @override\n   */\n  _getHeaderButtons() {\n    let buttons = super._getHeaderButtons();\n\n    // Token Configuration\n    const canConfigure = game.user.isGM || this.actor.isOwner;\n    if (this.options.editable && canConfigure) {\n      buttons = [\n        {\n          label: game.i18n.localize(\"OSE.dialog.tweaks\"),\n          class: \"configure-actor\",\n          icon: \"fas fa-code\",\n          onclick: (event) => this._onConfigureActor(event),\n        },\n      ].concat(buttons);\n    }\n    return buttons;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Attributes\n    html.find(\".saving-throw .attribute-name a\").click((event) => {\n      this._rollSave(event);\n    });\n\n    html.find(\".attack a\").click((event) => {\n      this._rollAttack(event);\n    });\n\n    html.find(\".hit-dice .attribute-name\").click((event) => {\n      this.actor.rollHitDice({ event: event });\n    });\n\n    // Items (Abilities, Inventory and Spells)\n    html.find(\".item-rollable .item-image\").click(async (event) => {\n      this._rollAbility(event);\n    });\n\n    html.find(\".inventory .item-category-title\").click((event) => {\n      this._toggleItemCategory(event);\n    });\n    html.find(\".inventory .category-caret\").click((event) => {\n      this._toggleContainedItems(event);\n    });\n\n    html.find(\".item-name\").click((event) => {\n      this._toggleItemSummary(event);\n    });\n\n    html.find(\".item-controls .item-show\").click(async (event) => {\n      this._displayItemInChat(event);\n    });\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.options.editable) return;\n\n    // Item Management\n    html.find(\".item-create\").click((event) => {\n      this._createItem(event);\n    });\n\n    html.find(\".item-edit\").click((event) => {\n      const item = this._getItemFromActor(event);\n      item.sheet.render(true);\n    });\n\n    html.find(\".item-delete\").click((event) => {\n      this._removeItemFromActor(event);\n    });\n\n    html\n      .find(\".quantity input\")\n      .click((ev) => ev.target.select())\n      .change(this._updateItemQuantity.bind(this));\n\n    // Consumables\n    html.find(\".consumable-counter .full-mark\").click((event) => {\n      this._useConsumable(event, true);\n    });\n    html.find(\".consumable-counter .empty-mark\").click((event) => {\n      this._useConsumable(event, false);\n    });\n\n    // Spells\n    html\n      .find(\".memorize input\")\n      .click((event) => event.target.select())\n      .change(this._onSpellChange.bind(this));\n\n    html\n      .find(\".spells .item-reset[data-action='reset-spells']\")\n      .click((event) => {\n        this._resetSpells(event);\n      });\n  }\n}\n","import { OSE } from \"../config\";\n\nexport class OseCharacterModifiers extends FormApplication {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    (options.classes = [\"ose\", \"dialog\", \"modifiers\"]),\n      (options.id = \"sheet-modifiers\");\n    options.template = `${OSE.systemPath()}/templates/actors/dialogs/modifiers-dialog.html`;\n    options.width = 240;\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add the Entity name into the window title\n   * @type {String}\n   */\n  get title() {\n    return `${this.object.name}: Modifiers`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Construct and return the data object used to render the HTML template for this form application.\n   * @return {Object}\n   */\n  getData() {\n    const data = foundry.utils.deepClone(this.object.data);\n    data.user = game.user;\n    return data;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n}\n","import { OSE } from \"./config\";\n\nexport class OseDice {\n  static async sendRoll({\n    parts = [],\n    data = {},\n    title = null,\n    flavor = null,\n    speaker = null,\n    form = null,\n    chatMessage = true,\n  } = {}) {\n    const template = `${OSE.systemPath()}/templates/chat/roll-result.html`;\n\n    let chatData = {\n      user: game.user.id,\n      speaker: speaker,\n    };\n\n    const templateData = {\n      title: title,\n      flavor: flavor,\n      data: data,\n    };\n\n    // Optionally include a situational bonus\n    if (form !== null && form.bonus.value) {\n      parts.push(form.bonus.value);\n    }\n\n    //;\n    const roll = new Roll(parts.join(\"+\"), data).evaluate({ async: false });\n\n    // Convert the roll to a chat message and return the roll\n    let rollMode = game.settings.get(\"core\", \"rollMode\");\n    rollMode = form ? form.rollMode.value : rollMode;\n\n    // Force blind roll (ability formulas)\n    if (!form && data.roll.blindroll) {\n      rollMode = game.user.isGM ? \"selfroll\" : \"blindroll\";\n    }\n\n    if ([\"gmroll\", \"blindroll\"].includes(rollMode))\n      chatData[\"whisper\"] = ChatMessage.getWhisperRecipients(\"GM\");\n    if (rollMode === \"selfroll\") chatData[\"whisper\"] = [game.user._id];\n    if (rollMode === \"blindroll\") {\n      chatData[\"blind\"] = true;\n      data.roll.blindroll = true;\n    }\n\n    templateData.result = OseDice.digestResult(data, roll);\n\n    return new Promise((resolve) => {\n      roll.render().then((r) => {\n        templateData.rollOSE = r;\n        renderTemplate(template, templateData).then((content) => {\n          chatData.content = content;\n          // Dice So Nice\n          if (game.dice3d) {\n            game.dice3d\n              .showForRoll(\n                roll,\n                game.user,\n                true,\n                chatData.whisper,\n                chatData.blind\n              )\n              .then((displayed) => {\n                if (chatMessage !== false) ChatMessage.create(chatData);\n                resolve(roll);\n              });\n          } else {\n            chatData.sound = CONFIG.sounds.dice;\n            if (chatMessage !== false) ChatMessage.create(chatData);\n            resolve(roll);\n          }\n        });\n      });\n    });\n  }\n\n  static digestResult(data, roll) {\n    let result = {\n      isSuccess: false,\n      isFailure: false,\n      target: data.roll.target,\n      total: roll.total,\n    };\n\n    let die = roll.terms[0].total;\n    if (data.roll.type == \"result\") {\n      if (roll.total == result.target) {\n        result.isSuccess = true;\n      } else {\n        result.isFailure = true;\n      }\n    } else if (data.roll.type == \"above\") {\n      // SAVING THROWS\n      if (roll.total >= result.target) {\n        result.isSuccess = true;\n      } else {\n        result.isFailure = true;\n      }\n    } else if (data.roll.type == \"below\") {\n      // MORALE, EXPLORATION\n      if (roll.total <= result.target) {\n        result.isSuccess = true;\n      } else {\n        result.isFailure = true;\n      }\n    } else if (data.roll.type == \"check\") {\n      // SCORE CHECKS (1s and 20s)\n      if (die == 1 || (roll.total <= result.target && die < 20)) {\n        result.isSuccess = true;\n      } else {\n        result.isFailure = true;\n      }\n    } else if (data.roll.type == \"table\") {\n      // Reaction\n      let table = data.roll.table;\n      let output = Object.values(table)[0];\n      for (let i = 0; i <= roll.total; i++) {\n        if (table[i]) {\n          output = table[i];\n        }\n      }\n      result.details = output;\n    }\n    return result;\n  }\n\n  static attackIsSuccess(roll, thac0, ac) {\n    if (roll.total == 1 || roll.terms[0].results[0] == 1) {\n      return false;\n    }\n    if (roll.total >= 20 || roll.terms[0].results[0] == 20) {\n      return true, -3;\n    }\n    if (roll.total + ac >= thac0) {\n      return true;\n    }\n    return false;\n  }\n\n  static digestAttackResult(data, roll) {\n    let result = {\n      isSuccess: false,\n      isFailure: false,\n      target: \"\",\n      total: roll.total,\n    };\n    result.target = data.roll.thac0;\n\n    const targetAc = data.roll.target\n      ? data.roll.target.actor.data.data.ac.value\n      : 9;\n    const targetAac = data.roll.target\n      ? data.roll.target.actor.data.data.aac.value\n      : 0;\n    result.victim = data.roll.target ? data.roll.target.data.name : null;\n\n    if (game.settings.get(\"ose\", \"ascendingAC\")) {\n      if (\n        (roll.terms[0] != 20 && roll.total < targetAac) ||\n        roll.terms[0] == 1\n      ) {\n        result.details = game.i18n.format(\n          \"OSE.messages.AttackAscendingFailure\",\n          {\n            bonus: result.target,\n          }\n        );\n        return result;\n      }\n      result.details = game.i18n.format(\"OSE.messages.AttackAscendingSuccess\", {\n        result: roll.total,\n      });\n      result.isSuccess = true;\n    } else {\n      if (!this.attackIsSuccess(roll, result.target, targetAc)) {\n        result.details = game.i18n.format(\"OSE.messages.AttackFailure\", {\n          bonus: result.target,\n        });\n        return result;\n      }\n      result.isSuccess = true;\n      let value = Math.clamped(result.target - roll.total, -3, 9);\n      result.details = game.i18n.format(\"OSE.messages.AttackSuccess\", {\n        result: value,\n        bonus: result.target,\n      });\n    }\n    return result;\n  }\n\n  static async sendAttackRoll({\n    parts = [],\n    data = {},\n    flags = {},\n    title = null,\n    flavor = null,\n    speaker = null,\n    form = null,\n  } = {}) {\n    const template = `${OSE.systemPath()}/templates/chat/roll-attack.html`;\n    let chatData = {\n      user: game.user.id,\n      speaker: speaker,\n      flags: flags,\n    };\n\n    let templateData = {\n      title: title,\n      flavor: flavor,\n      data: data,\n      config: CONFIG.OSE,\n    };\n\n    // Optionally include a situational bonus\n    if (form !== null && form.bonus.value) parts.push(form.bonus.value);\n\n    const roll = new Roll(parts.join(\"+\"), data).evaluate({ async: false });\n    const dmgRoll = new Roll(data.roll.dmg.join(\"+\"), data).evaluate({\n      async: false,\n    });\n\n    // Convert the roll to a chat message and return the roll\n    let rollMode = game.settings.get(\"core\", \"rollMode\");\n    rollMode = form ? form.rollMode.value : rollMode;\n\n    // Force blind roll (ability formulas)\n    if (data.roll.blindroll) {\n      rollMode = game.user.isGM ? \"selfroll\" : \"blindroll\";\n    }\n\n    if ([\"gmroll\", \"blindroll\"].includes(rollMode))\n      chatData[\"whisper\"] = ChatMessage.getWhisperRecipients(\"GM\");\n    if (rollMode === \"selfroll\") chatData[\"whisper\"] = [game.user._id];\n    if (rollMode === \"blindroll\") {\n      chatData[\"blind\"] = true;\n      data.roll.blindroll = true;\n    }\n\n    templateData.result = OseDice.digestAttackResult(data, roll);\n\n    return new Promise((resolve) => {\n      roll.render().then((r) => {\n        templateData.rollOSE = r;\n        dmgRoll.render().then((dr) => {\n          templateData.rollDamage = dr;\n          renderTemplate(template, templateData).then((content) => {\n            chatData.content = content;\n            // 2 Step Dice So Nice\n            if (game.dice3d) {\n              game.dice3d\n                .showForRoll(\n                  roll,\n                  game.user,\n                  true,\n                  chatData.whisper,\n                  chatData.blind\n                )\n                .then(() => {\n                  if (templateData.result.isSuccess) {\n                    templateData.result.dmg = dmgRoll.total;\n                    game.dice3d\n                      .showForRoll(\n                        dmgRoll,\n                        game.user,\n                        true,\n                        chatData.whisper,\n                        chatData.blind\n                      )\n                      .then(() => {\n                        ChatMessage.create(chatData);\n                        resolve(roll);\n                      });\n                  } else {\n                    ChatMessage.create(chatData);\n                    resolve(roll);\n                  }\n                });\n            } else {\n              chatData.sound = CONFIG.sounds.dice;\n              ChatMessage.create(chatData);\n              resolve(roll);\n            }\n          });\n        });\n      });\n    });\n  }\n\n  static async RollSave({\n    parts = [],\n    data = {},\n    skipDialog = false,\n    speaker = null,\n    flavor = null,\n    title = null,\n    chatMessage = true,\n  } = {}) {\n    let rolled = false;\n    const template = `${OSE.systemPath()}/templates/chat/roll-dialog.html`;\n    let dialogData = {\n      formula: parts.join(\" \"),\n      data: data,\n      rollMode: game.settings.get(\"core\", \"rollMode\"),\n      rollModes: CONFIG.Dice.rollModes,\n    };\n\n    let rollData = {\n      parts: parts,\n      data: data,\n      title: title,\n      flavor: flavor,\n      speaker: speaker,\n      chatMessage: chatMessage,\n    };\n    if (skipDialog) {\n      return OseDice.sendRoll(rollData);\n    }\n\n    let buttons = {\n      ok: {\n        label: game.i18n.localize(\"OSE.Roll\"),\n        icon: '<i class=\"fas fa-dice-d20\"></i>',\n        callback: (html) => {\n          rolled = true;\n          rollData.form = html[0].querySelector(\"form\");\n          roll = OseDice.sendRoll(rollData);\n        },\n      },\n      magic: {\n        label: game.i18n.localize(\"OSE.saves.magic.short\"),\n        icon: '<i class=\"fas fa-magic\"></i>',\n        callback: (html) => {\n          rolled = true;\n          rollData.form = html[0].querySelector(\"form\");\n          rollData.parts.push(`${rollData.data.roll.magic}`);\n          rollData.title += ` ${game.i18n.localize(\"OSE.saves.magic.short\")} (${\n            rollData.data.roll.magic\n          })`;\n          roll = OseDice.sendRoll(rollData);\n        },\n      },\n      cancel: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: game.i18n.localize(\"OSE.Cancel\"),\n        callback: (html) => {},\n      },\n    };\n\n    const html = await renderTemplate(template, dialogData);\n    let roll;\n\n    //Create Dialog window\n    return new Promise((resolve) => {\n      new Dialog({\n        title: title,\n        content: html,\n        buttons: buttons,\n        default: \"ok\",\n        close: () => {\n          resolve(rolled ? roll : false);\n        },\n      }).render(true);\n    });\n  }\n\n  static async Roll({\n    parts = [],\n    data = {},\n    skipDialog = false,\n    speaker = null,\n    flavor = null,\n    title = null,\n    chatMessage = true,\n    flags = {},\n  } = {}) {\n    let rolled = false;\n    const template = `${OSE.systemPath()}/templates/chat/roll-dialog.html`;\n    let dialogData = {\n      formula: parts.join(\" \"),\n      data: data,\n      rollMode: data.roll.blindroll\n        ? \"blindroll\"\n        : game.settings.get(\"core\", \"rollMode\"),\n      rollModes: CONFIG.Dice.rollModes,\n    };\n    let rollData = {\n      parts: parts,\n      data: data,\n      title: title,\n      flavor: flavor,\n      speaker: speaker,\n      chatMessage: chatMessage,\n      flags: flags,\n    };\n    if (skipDialog) {\n      return [\"melee\", \"missile\", \"attack\"].includes(data.roll.type)\n        ? OseDice.sendAttackRoll(rollData)\n        : OseDice.sendRoll(rollData);\n    }\n\n    let buttons = {\n      ok: {\n        label: game.i18n.localize(\"OSE.Roll\"),\n        icon: '<i class=\"fas fa-dice-d20\"></i>',\n        callback: (html) => {\n          rolled = true;\n          rollData.form = html[0].querySelector(\"form\");\n          roll = [\"melee\", \"missile\", \"attack\"].includes(data.roll.type)\n            ? OseDice.sendAttackRoll(rollData)\n            : OseDice.sendRoll(rollData);\n        },\n      },\n      cancel: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: game.i18n.localize(\"OSE.Cancel\"),\n        callback: (html) => {},\n      },\n    };\n\n    const html = await renderTemplate(template, dialogData);\n    let roll;\n\n    //Create Dialog window\n    return new Promise((resolve) => {\n      new Dialog({\n        title: title,\n        content: html,\n        buttons: buttons,\n        default: \"ok\",\n        close: () => {\n          resolve(rolled ? roll : false);\n        },\n      }).render(true);\n    });\n  }\n}\n","import { OseDice } from \"../dice\";\nimport { OSE } from \"../config\";\n\nexport class OseCharacterCreator extends FormApplication {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    (options.classes = [\"ose\", \"dialog\", \"creator\"]),\n      (options.id = \"character-creator\");\n    options.template = `${OSE.systemPath()}/templates/actors/dialogs/character-creation.html`;\n    options.width = 235;\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add the Entity name into the window title\n   * @type {String}\n   */\n  get title() {\n    return `${this.object.name}: ${game.i18n.localize(\"OSE.dialog.generator\")}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Construct and return the data object used to render the HTML template for this form application.\n   * @return {Object}\n   */\n  getData() {\n    let data = foundry.utils.deepClone(this.object.data);\n    data.user = game.user;\n    data.config = CONFIG.OSE;\n    this.counters = {\n      str: 0,\n      wis: 0,\n      dex: 0,\n      int: 0,\n      cha: 0,\n      con: 0,\n      gold: 0,\n    };\n    this.stats = {\n      sum: 0,\n      avg: 0,\n      std: 0,\n    };\n    this.scores = {};\n    this.gold = 0;\n    return data;\n  }\n\n  /* -------------------------------------------- */\n\n  doStats(ev) {\n    const list = $(ev.currentTarget).closest(\".attribute-list\");\n    const scores = Object.values(this.scores);\n    const n = scores.length;\n    const sum = scores.reduce((acc, next) => acc + next.value, 0);\n    const mean = parseFloat(sum) / n;\n    const std = Math.sqrt(\n      scores\n        .map((x) => Math.pow(x.value - mean, 2))\n        .reduce((acc, next) => acc + next, 0) / n\n    );\n\n    let stats = list.siblings(\".roll-stats\");\n    stats.find(\".sum\").text(sum);\n    stats.find(\".avg\").text(Math.round((10 * sum) / n) / 10);\n    stats.find(\".std\").text(Math.round(100 * std) / 100);\n\n    if (n >= 6) {\n      $(ev.currentTarget)\n        .closest(\"form\")\n        .find('button[type=\"submit\"]')\n        .removeAttr(\"disabled\");\n    }\n\n    this.object.data.stats = {\n      sum: sum,\n      avg: Math.round((10 * sum) / n) / 10,\n      std: Math.round(100 * std) / 100,\n    };\n  }\n\n  rollScore(score, options = {}) {\n    // Increase counter\n    this.counters[score]++;\n\n    const label =\n      score != \"gold\" ? game.i18n.localize(`OSE.scores.${score}.long`) : \"Gold\";\n    const rollParts = [\"3d6\"];\n    const data = {\n      roll: {\n        type: \"result\",\n      },\n    };\n    if (options.skipMessage) {\n      return new Roll(rollParts[0]).evaluate({ async: false });\n    }\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data: data,\n      skipDialog: true,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.format(\"OSE.dialog.generateScore\", {\n        score: label,\n        count: this.counters[score],\n      }),\n      title: game.i18n.format(\"OSE.dialog.generateScore\", {\n        score: label,\n        count: this.counters[score],\n      }),\n    });\n  }\n\n  async close(options) {\n    // Gather scores\n    const speaker = ChatMessage.getSpeaker({ actor: this });\n    const templateData = {\n      config: CONFIG.OSE,\n      scores: this.scores,\n      title: game.i18n.localize(\"OSE.dialog.generator\"),\n      stats: this.object.data.stats,\n      gold: this.gold,\n    };\n    const content = await renderTemplate(\n      `${OSE.systemPath()}/templates/chat/roll-creation.html`,\n      templateData\n    );\n    ChatMessage.create({\n      content: content,\n      speaker,\n    });\n    return super.close(options);\n  }\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n    html.find(\"a.score-roll\").click((ev) => {\n      let el = ev.currentTarget.parentElement.parentElement;\n      let score = el.dataset.score;\n      this.rollScore(score, { event: ev }).then((r) => {\n        this.scores[score] = { value: r.total };\n        $(el).find(\"input\").val(r.total).trigger(\"change\");\n      });\n    });\n\n    html.find(\"a.gold-roll\").click((ev) => {\n      let el = ev.currentTarget.parentElement.parentElement.parentElement;\n      this.rollScore(\"gold\", { event: ev }).then((r) => {\n        this.gold = 10 * r.total;\n        $(el).find(\".gold-value\").val(this.gold);\n      });\n    });\n\n    html.find(\"input.score-value\").change((ev) => {\n      this.doStats(ev);\n    });\n\n    html.find(\"a.auto-roll\").click(async (ev) => {\n      const stats = [\"str\", \"int\", \"dex\", \"wis\", \"con\", \"cha\"];\n      for (let char of stats) {\n        const r = await this.rollScore(char, { event: ev, skipMessage: true });\n        this.scores[char] = { value: r.total };\n      }\n      this.doStats(ev);\n      const r = await this.rollScore(\"gold\", { event: ev, skipMessage: true });\n      this.gold = 10 * r.total;\n      this.submit();\n    });\n  }\n\n  async _onSubmit(\n    event,\n    { updateData = null, preventClose = false, preventRender = false } = {}\n  ) {\n    updateData = { ...updateData, data: { scores: this.scores } };\n    super._onSubmit(event, {\n      updateData: updateData,\n      preventClose: preventClose,\n      preventRender: preventRender,\n    });\n    // Generate gold\n    const itemData = {\n      name: \"GP\",\n      type: \"item\",\n      img: \"systems/ose/assets/gold.png\",\n      data: {\n        treasure: true,\n        cost: 1,\n        weight: 1,\n        quantity: {\n          value: this.gold,\n        },\n      },\n    };\n    this.object.createEmbeddedDocuments(\"Item\", [itemData]);\n  }\n  /**\n   * This method is called upon form submission after form data is validated\n   * @param event {Event}       The initial triggering submission event\n   * @param formData {Object}   The object of validated form data with which to update the object\n   * @private\n   */\n  async _updateObject(event, formData) {\n    event.preventDefault();\n    // Update the actor\n    await this.object.update(formData);\n\n    // Re-draw the updated sheet\n    this.object.sheet.render(true);\n  }\n}\n","import { OseActorSheet } from \"./actor-sheet\";\nimport { OseCharacterModifiers } from \"../dialog/character-modifiers\";\nimport { OseCharacterCreator } from \"../dialog/character-creation\";\nimport { OSE } from \"../config\";\n\n/**\n * Extend the basic ActorSheet with some very simple modifications\n */\nexport class OseActorSheetCharacter extends OseActorSheet {\n  constructor(...args) {\n    super(...args);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Extend and override the default options used by the 5e Actor Sheet\n   * @returns {Object}\n   */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"ose\", \"sheet\", \"actor\", \"character\"],\n      template: `${OSE.systemPath()}/templates/actors/character-sheet.html`,\n      width: 450,\n      height: 530,\n      resizable: true,\n      tabs: [\n        {\n          navSelector: \".sheet-tabs\",\n          contentSelector: \".sheet-body\",\n          initial: \"attributes\",\n        },\n      ],\n      scrollY: [\".inventory\"],\n    });\n  }\n\n  /**\n   * Organize and classify Owned Items for Character sheets\n   * @private\n   */\n  _prepareItems(data) {\n    const itemsData = this.actor.data.items;\n    const containerContents = {};\n    // Partition items by category\n    let [containers, treasures, items, weapons, armors, abilities, spells] =\n      itemsData.reduce(\n        (arr, item) => {\n          // Classify items into types\n          const containerId = item?.data?.data?.containerId;\n          if (containerId) {\n            containerContents[containerId] = [\n              ...(containerContents[containerId] || []),\n              item,\n            ];\n          } else if (item.type === \"container\") arr[0].push(item);\n          else if (item.type === \"item\" && item?.data?.data?.treasure)\n            arr[1].push(item);\n          else if (item.type === \"item\") arr[2].push(item);\n          else if (item.type === \"weapon\") arr[3].push(item);\n          else if (item.type === \"armor\") arr[4].push(item);\n          else if (item.type === \"ability\") arr[5].push(item);\n          else if (item.type === \"spell\") arr[6].push(item);\n          return arr;\n        },\n        [[], [], [], [], [], [], []]\n      );\n    // Sort spells by level\n    var sortedSpells = {};\n    var slots = {};\n    for (var i = 0; i < spells.length; i++) {\n      const lvl = spells[i].data.data.lvl;\n      if (!sortedSpells[lvl]) sortedSpells[lvl] = [];\n      if (!slots[lvl]) slots[lvl] = 0;\n      slots[lvl] += spells[i].data.data.memorized;\n      sortedSpells[lvl].push(spells[i]);\n    }\n    data.slots = {\n      used: slots,\n    };\n    containers.map((container, key, arr) => {\n      arr[key].data.data.itemIds = containerContents[container.id] || [];\n      arr[key].data.data.totalWeight = containerContents[container.id]?.reduce(\n        (acc, item) => {\n          return (\n            acc +\n            item.data?.data?.weight * (item.data?.data?.quantity?.value || 1)\n          );\n        },\n        0\n      );\n      return arr;\n    });\n\n    // Assign and return\n    data.owned = {\n      items: items,\n      armors: armors,\n      weapons: weapons,\n      treasures: treasures,\n      containers: containers,\n    };\n    data.containers = containers;\n    data.abilities = abilities;\n    data.spells = sortedSpells;\n\n    // Sort by sort order (see ActorSheet)\n    [\n      ...Object.values(data.owned),\n      ...Object.values(data.spells),\n      data.abilities,\n    ].forEach((o) => o.sort((a, b) => (a.data.sort || 0) - (b.data.sort || 0)));\n  }\n\n  generateScores() {\n    new OseCharacterCreator(this.actor, {\n      top: this.position.top + 40,\n      left: this.position.left + (this.position.width - 400) / 2,\n    }).render(true);\n  }\n\n  /**\n   * Prepare data for rendering the Actor sheet\n   * The prepared data object contains both the actor data as well as additional sheet options\n   */\n  getData() {\n    const data = super.getData();\n    // Prepare owned items\n    this._prepareItems(data);\n    return data;\n  }\n\n  async _chooseLang() {\n    let choices = CONFIG.OSE.languages;\n\n    let templateData = { choices: choices },\n      dlg = await renderTemplate(\n        `${OSE.systemPath()}/templates/actors/dialogs/lang-create.html`,\n        templateData\n      );\n    //Create Dialog window\n    return new Promise((resolve) => {\n      new Dialog({\n        title: \"\",\n        content: dlg,\n        buttons: {\n          ok: {\n            label: game.i18n.localize(\"OSE.Ok\"),\n            icon: '<i class=\"fas fa-check\"></i>',\n            callback: (html) => {\n              resolve({\n                choice: html.find('select[name=\"choice\"]').val(),\n              });\n            },\n          },\n          cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: game.i18n.localize(\"OSE.Cancel\"),\n          },\n        },\n        default: \"ok\",\n      }).render(true);\n    });\n  }\n\n  _pushLang(table) {\n    const data = this.actor.data.data;\n    let update = duplicate(data[table]);\n    this._chooseLang().then((dialogInput) => {\n      const name = CONFIG.OSE.languages[dialogInput.choice];\n      if (update.value) {\n        update.value.push(name);\n      } else {\n        update = { value: [name] };\n      }\n      let newData = {};\n      newData[table] = update;\n      return this.actor.update({ data: newData });\n    });\n  }\n\n  _popLang(table, lang) {\n    const data = this.actor.data.data;\n    let update = data[table].value.filter((el) => el != lang);\n    let newData = {};\n    newData[table] = { value: update };\n    return this.actor.update({ data: newData });\n  }\n\n  /* -------------------------------------------- */\n\n  _onShowModifiers(event) {\n    event.preventDefault();\n    new OseCharacterModifiers(this.actor, {\n      top: this.position.top + 40,\n      left: this.position.left + (this.position.width - 400) / 2,\n    }).render(true);\n  }\n\n  async _onShowItemTooltip(event) {\n    let templateData = {},\n      dlg = await renderTemplate(\n        `${OSE.systemPath()}/templates/actors/partials/character-item-tooltip.html`,\n        templateData\n      );\n    document.querySelector(\".game\").append(dlg);\n  }\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   * @param html {HTML}   The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find(\".ability-score .attribute-name a\").click((ev) => {\n      let actorObject = this.actor;\n      let element = ev.currentTarget;\n      let score = element.parentElement.parentElement.dataset.score;\n      let stat = element.parentElement.parentElement.dataset.stat;\n      if (!score) {\n        if (stat == \"lr\") {\n          actorObject.rollLoyalty(score, { event: ev });\n        }\n      } else {\n        actorObject.rollCheck(score, { event: ev });\n      }\n    });\n\n    html.find(\".exploration .attribute-name a\").click((ev) => {\n      let actorObject = this.actor;\n      let element = ev.currentTarget;\n      let expl = element.parentElement.parentElement.dataset.exploration;\n      actorObject.rollExploration(expl, { event: ev });\n    });\n\n    html.find(\"a[data-action='modifiers']\").click((ev) => {\n      this._onShowModifiers(ev);\n    });\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.options.editable) return;\n\n    // Language Management\n    html.find(\".item-push\").click((ev) => {\n      ev.preventDefault();\n      const header = ev.currentTarget;\n      const table = header.dataset.array;\n      this._pushLang(table);\n    });\n\n    html.find(\".item-pop\").click((ev) => {\n      ev.preventDefault();\n      const header = ev.currentTarget;\n      const table = header.dataset.array;\n      this._popLang(table, $(ev.currentTarget).closest(\".item\").data(\"lang\"));\n    });\n\n    //Toggle Equipment\n    html.find(\".item-toggle\").click(async (ev) => {\n      const li = $(ev.currentTarget).parents(\".item\");\n      const item = this.actor.items.get(li.data(\"itemId\"));\n      await item.update({\n        data: {\n          equipped: !item.data.data.equipped,\n        },\n      });\n    });\n\n    html.find(\"a[data-action='generate-scores']\").click((ev) => {\n      this.generateScores(ev);\n    });\n  }\n}\n","import { OseActorSheet } from \"./actor-sheet\";\nimport { OSE } from \"../config\";\n\n/**\n * Extend the basic ActorSheet with some very simple modifications\n */\nexport class OseActorSheetMonster extends OseActorSheet {\n  constructor(...args) {\n    super(...args);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Extend and override the default options used by the 5e Actor Sheet\n   * @returns {Object}\n   */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"ose\", \"sheet\", \"monster\", \"actor\"],\n      template: `${OSE.systemPath()}/templates/actors/monster-sheet.html`,\n      width: 450,\n      height: 560,\n      resizable: true,\n      tabs: [\n        {\n          navSelector: \".tabs\",\n          contentSelector: \".sheet-body\",\n          initial: \"attributes\",\n        },\n      ],\n    });\n  }\n\n  /**\n   * Organize and classify Owned Items for Character sheets\n   * @private\n   */\n  _prepareItems(data) {\n    const itemsData = this.actor.data.items;\n    const containerContents = {};\n    const attackPatterns = {};\n\n    // Partition items by category\n    let [weapons, items, armors, spells, containers] = itemsData.reduce(\n      (arr, item) => {\n        // Classify items into types\n        const containerId = item?.data?.data?.containerId;\n        if (containerId) {\n          containerContents[containerId] = [\n            ...(containerContents[containerId] || []),\n            item,\n          ];\n          return arr;\n        }\n        // Grab attack groups\n        if ([\"weapon\", \"ability\"].includes(item.type)) {\n          if (attackPatterns[item.data.data.pattern] === undefined)\n            attackPatterns[item.data.data.pattern] = [];\n          attackPatterns[item.data.data.pattern].push(item);\n        }\n        // Classify items into types\n        switch (item.type) {\n          case \"weapon\":\n            arr[0].push(item);\n            break;\n          case \"item\":\n            arr[1].push(item);\n            break;\n          case \"armor\":\n            arr[2].push(item);\n            break;\n          case \"spell\":\n            arr[3].push(item);\n            break;\n          case \"container\":\n            arr[4].push(item);\n            break;\n        }\n\n        return arr;\n      },\n      [[], [], [], [], []]\n    );\n\n    // Sort spells by level\n    var sortedSpells = {};\n    var slots = {};\n    for (var i = 0; i < spells.length; i++) {\n      let lvl = spells[i].data.data.lvl;\n      if (!sortedSpells[lvl]) sortedSpells[lvl] = [];\n      if (!slots[lvl]) slots[lvl] = 0;\n      slots[lvl] += spells[i].data.data.memorized;\n      sortedSpells[lvl].push(spells[i]);\n    }\n    data.slots = {\n      used: slots,\n    };\n    containers.map((container, key, arr) => {\n      arr[key].data.data.itemIds = containerContents[container.id] || [];\n      arr[key].data.data.totalWeight = containerContents[container.id]?.reduce(\n        (acc, item) => {\n          return (\n            acc +\n            item.data?.data?.weight * (item.data?.data?.quantity?.value || 1)\n          );\n        },\n        0\n      );\n      return arr;\n    });\n    // Assign and return\n    data.owned = {\n      weapons: weapons,\n      items: items,\n      containers: containers,\n      armors: armors,\n    };\n    data.attackPatterns = attackPatterns;\n    data.spells = sortedSpells;\n    [\n      ...Object.values(data.attackPatterns),\n      ...Object.values(data.owned),\n      ...Object.values(data.spells),\n    ].forEach((o) => o.sort((a, b) => (a.data.sort || 0) - (b.data.sort || 0)));\n  }\n\n  /**\n   * Prepare data for rendering the Actor sheet\n   * The prepared data object contains both the actor data as well as additional sheet options\n   */\n  getData() {\n    const data = super.getData();\n    // Prepare owned items\n    this._prepareItems(data);\n\n    // Settings\n    data.config.morale = game.settings.get(\"ose\", \"morale\");\n    data.data.details.treasure.link = TextEditor.enrichHTML(\n      data.data.details.treasure.table\n    );\n    data.isNew = this.actor.isNew();\n    return data;\n  }\n\n  /**\n   * Monster creation helpers\n   */\n  async generateSave() {\n    let choices = CONFIG.OSE.monster_saves;\n\n    let templateData = { choices: choices },\n      dlg = await renderTemplate(\n        `${OSE.systemPath()}/templates/actors/dialogs/monster-saves.html`,\n        templateData\n      );\n    //Create Dialog window\n    new Dialog(\n      {\n        title: game.i18n.localize(\"OSE.dialog.generateSaves\"),\n        content: dlg,\n        buttons: {\n          ok: {\n            label: game.i18n.localize(\"OSE.Ok\"),\n            icon: '<i class=\"fas fa-check\"></i>',\n            callback: (html) => {\n              let hd = html.find('input[name=\"hd\"]').val();\n              this.actor.generateSave(hd);\n            },\n          },\n          cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: game.i18n.localize(\"OSE.Cancel\"),\n          },\n        },\n        default: \"ok\",\n      },\n      {\n        width: 250,\n      }\n    ).render(true);\n  }\n\n  async _onDrop(event) {\n    super._onDrop(event);\n    let data;\n    try {\n      data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n      if (data.type !== \"RollTable\") return;\n    } catch (err) {\n      return false;\n    }\n\n    let link = \"\";\n    if (data.pack) {\n      let tableData = game.packs\n        .get(data.pack)\n        .index.filter((el) => el._id === data.id);\n      link = `@Compendium[${data.pack}.${data.id}]{${tableData[0].name}}`;\n    } else {\n      link = `@RollTable[${data.id}]`;\n    }\n    this.actor.update({ \"data.details.treasure.table\": link });\n  }\n\n  /* -------------------------------------------- */\n  async _resetAttacks(event) {\n    const weapons = this.actor.data.items.filter((i) => i.type === \"weapon\");\n    for (let wp of weapons) {\n      const item = this.actor.items.get(wp.id);\n      await item.update({\n        data: {\n          counter: {\n            value: parseInt(wp.data.data.counter.max),\n          },\n        },\n      });\n    }\n  }\n\n  async _updateAttackCounter(event) {\n    event.preventDefault();\n    const item = this._getItemFromActor(event);\n\n    if (event.target.dataset.field === \"value\") {\n      return item.update({\n        \"data.counter.value\": parseInt(event.target.value),\n      });\n    } else if (event.target.dataset.field === \"max\") {\n      return item.update({\n        \"data.counter.max\": parseInt(event.target.value),\n      });\n    }\n  }\n\n  _cycleAttackPatterns(event) {\n    const item = super._getItemFromActor(event);\n    let currentColor = item.data.data.pattern;\n    let colors = Object.keys(CONFIG.OSE.colors);\n    let index = colors.indexOf(currentColor);\n    if (index + 1 == colors.length) {\n      index = 0;\n    } else {\n      index++;\n    }\n    item.update({\n      \"data.pattern\": colors[index],\n    });\n  }\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   * @param html {HTML}   The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find(\".morale-check a\").click((ev) => {\n      let actorObject = this.actor;\n      actorObject.rollMorale({ event: ev });\n    });\n\n    html.find(\".reaction-check a\").click((ev) => {\n      let actorObject = this.actor;\n      actorObject.rollReaction({ event: ev });\n    });\n\n    html.find(\".appearing-check a\").click((ev) => {\n      let actorObject = this.actor;\n      let check = $(ev.currentTarget).closest(\".check-field\").data(\"check\");\n      actorObject.rollAppearing({ event: ev, check: check });\n    });\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.options.editable) return;\n\n    html.find(\".item-reset[data-action='reset-attacks']\").click((ev) => {\n      this._resetAttacks(ev);\n    });\n\n    html\n      .find(\".counter input\")\n      .click((ev) => ev.target.select())\n      .change(this._updateAttackCounter.bind(this));\n\n    html.find(\".hp-roll\").click((ev) => {\n      this.actor.rollHP({ event: ev });\n    });\n\n    html.find(\".item-pattern\").click((ev) => this._cycleAttackPatterns(ev));\n\n    html\n      .find('button[data-action=\"generate-saves\"]')\n      .click(() => this.generateSave());\n  }\n}\n","import { OSE } from \"./config\";\n\nexport const preloadHandlebarsTemplates = async function () {\n  const templatePaths = [\n    //Character Sheets\n    `${OSE.systemPath()}/templates/actors/character-sheet.html`,\n    `${OSE.systemPath()}/templates/actors/monster-sheet.html`,\n\n    //Character Sheets Partials\n    `${OSE.systemPath()}/templates/actors/partials/character-header.html`,\n    `${OSE.systemPath()}/templates/actors/partials/character-attributes-tab.html`,\n    `${OSE.systemPath()}/templates/actors/partials/character-abilities-tab.html`,\n    `${OSE.systemPath()}/templates/actors/partials/character-spells-tab.html`,\n    `${OSE.systemPath()}/templates/actors/partials/character-inventory-tab.html`,\n    `${OSE.systemPath()}/templates/actors/partials/actor-item-summary.html`,\n    `${OSE.systemPath()}/templates/actors/partials/character-notes-tab.html`,\n    `${OSE.systemPath()}/templates/actors/partials/monster-header.html`,\n    `${OSE.systemPath()}/templates/actors/partials/monster-attributes-tab.html`,\n\n    // Item Display\n    `${OSE.systemPath()}/templates/actors/partials/item-auto-tags-partial.html`,\n\n    // Party Sheet\n    `${OSE.systemPath()}/templates/apps/party-sheet.html`,\n    `${OSE.systemPath()}/templates/apps/party-xp.html`,\n  ];\n  return loadTemplates(templatePaths);\n};\n","import { OseDice } from \"../dice\";\n\n/**\n * Override and extend the basic :class:`Item` implementation\n */\nexport class OseItem extends Item {\n  // Replacing default image */\n  static get defaultIcons() {\n    return {\n      spell: \"systems/ose/assets/default/spell.png\",\n      ability: \"systems/ose/assets/default/ability.png\",\n      armor: \"systems/ose/assets/default/armor.png\",\n      weapon: \"systems/ose/assets/default/weapon.png\",\n      item: \"systems/ose/assets/default/item.png\",\n      container: \"systems/ose/assets/default/bag.png\",\n    };\n  }\n\n  static async create(data, context = {}) {\n    if (data.img === undefined) {\n      data.img = this.defaultIcons[data.type];\n    }\n    return super.create(data, context);\n  }\n\n  prepareData() {\n    super.prepareData();\n  }\n\n  prepareDerivedData() {\n    this.data.data.autoTags = this.getAutoTagList();\n    this.data.data.manualTags = this.data.data.tags;\n  }\n\n  static chatListeners(html) {\n    html.on(\"click\", \".card-buttons button\", this._onChatCardAction.bind(this));\n    html.on(\"click\", \".item-name\", this._onChatCardToggleContent.bind(this));\n  }\n\n  getChatData(htmlOptions) {\n    const data = duplicate(this.data.data);\n\n    // Rich text description\n    data.description = TextEditor.enrichHTML(data.description, htmlOptions);\n\n    // Item properties\n    const props = [];\n\n    if (this.data.type == \"weapon\") {\n      data.tags.forEach((t) => props.push(t.value));\n    }\n    if (this.data.type == \"spell\") {\n      props.push(`${data.class} ${data.lvl}`, data.range, data.duration);\n    }\n    if (data.hasOwnProperty(\"equipped\")) {\n      props.push(data.equipped ? \"Equipped\" : \"Not Equipped\");\n    }\n\n    // Filter properties and return\n    data.properties = props.filter((p) => !!p);\n    return data;\n  }\n\n  rollWeapon(options = {}) {\n    let isNPC = this.actor.data.type != \"character\";\n    const targets = 5;\n    const data = this.data.data;\n    let type = isNPC ? \"attack\" : \"melee\";\n    const rollData = {\n      item: this.data,\n      actor: this.actor.data,\n      roll: {\n        save: this.data.data.save,\n        target: null,\n      },\n    };\n\n    if (data.missile && data.melee && !isNPC) {\n      // Dialog\n      new Dialog({\n        title: \"Choose Attack Range\",\n        content: \"\",\n        buttons: {\n          melee: {\n            icon: '<i class=\"fas fa-fist-raised\"></i>',\n            label: \"Melee\",\n            callback: () => {\n              this.actor.targetAttack(rollData, \"melee\", options);\n            },\n          },\n          missile: {\n            icon: '<i class=\"fas fa-bullseye\"></i>',\n            label: \"Missile\",\n            callback: () => {\n              this.actor.targetAttack(rollData, \"missile\", options);\n            },\n          },\n        },\n        default: \"melee\",\n      }).render(true);\n      return true;\n    } else if (data.missile && !isNPC) {\n      type = \"missile\";\n    }\n    this.actor.targetAttack(rollData, type, options);\n    return true;\n  }\n\n  async rollFormula(options = {}) {\n    const data = this.data.data;\n    if (!data.roll) {\n      throw new Error(\"This Item does not have a formula to roll!\");\n    }\n\n    const label = `${this.name}`;\n    const rollParts = [data.roll];\n\n    let type = data.rollType;\n\n    const newData = {\n      actor: this.actor.data,\n      item: this.data,\n      roll: {\n        type: type,\n        target: data.rollTarget,\n        blindroll: data.blindroll,\n      },\n    };\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data: newData,\n      skipDialog: true,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.format(\"OSE.roll.formula\", { label: label }),\n      title: game.i18n.format(\"OSE.roll.formula\", { label: label }),\n    });\n  }\n\n  spendSpell() {\n    this.update({\n      data: {\n        cast: this.data.data.cast - 1,\n      },\n    }).then(() => {\n      this.show({ skipDialog: true });\n    });\n  }\n\n  _getRollTag(data) {\n    if (data.roll) {\n      const roll = `${data.roll}${\n        data.rollTarget ? CONFIG.OSE.roll_type[data.rollType] : \"\"\n      }${data.rollTarget ? data.rollTarget : \"\"}`;\n      return {\n        label: `${game.i18n.localize(\"OSE.items.Roll\")} ${roll}`,\n      };\n    } else {\n      return;\n    }\n  }\n\n  _getSaveTag(data) {\n    if (data.save) {\n      return {\n        label: CONFIG.OSE.saves_long[data.save],\n        icon: \"fa-skull\",\n      };\n    } else {\n      return;\n    }\n  }\n\n  getAutoTagList() {\n    const tagList = [];\n    const data = this.data.data;\n\n    switch (this.data.type) {\n      case \"container\":\n      case \"item\":\n        break;\n      case \"weapon\":\n        tagList.push({ label: data.damage, icon: \"fa-tint\" });\n        if (data.missile) {\n          tagList.push({\n            label: `${data.range.short}/${data.range.medium}/${data.range.long}`,\n            icon: \"fa-bullseye\",\n          });\n        }\n\n        // Push manual tags\n        data.tags.forEach((t) => {\n          tagList.push({ label: t.value });\n        });\n        break;\n      case \"armor\":\n        tagList.push({ label: CONFIG.OSE.armor[data.type], icon: \"fa-tshirt\" });\n        break;\n      case \"spell\":\n        tagList.push(\n          { label: data.class },\n          { label: data.range },\n          { label: data.duration }\n        );\n        break;\n      case \"ability\":\n        const reqs = data.requirements.split(\",\");\n        reqs.forEach((req) => tagList.push({ label: req }));\n        break;\n    }\n\n    const rollTag = this._getRollTag(data);\n    if (rollTag) {\n      tagList.push(rollTag);\n    }\n\n    const saveTag = this._getSaveTag(data);\n    if (saveTag) {\n      tagList.push(saveTag);\n    }\n\n    return tagList;\n  }\n\n  pushManualTag(values) {\n    const data = this.data.data;\n    let update = [];\n    if (data.tags) {\n      update = duplicate(data.tags);\n    }\n    let newData = {};\n    var regExp = /\\(([^)]+)\\)/;\n    if (update) {\n      values.forEach((val) => {\n        // Catch infos in brackets\n        var matches = regExp.exec(val);\n        let title = \"\";\n        if (matches) {\n          title = matches[1];\n          val = val.substring(0, matches.index).trim();\n        } else {\n          val = val.trim();\n          title = val;\n        }\n        // Auto fill checkboxes\n        switch (val) {\n          case CONFIG.OSE.tags.melee:\n            newData.melee = true;\n            break;\n          case CONFIG.OSE.tags.slow:\n            newData.slow = true;\n            break;\n          case CONFIG.OSE.tags.missile:\n            newData.missile = true;\n            break;\n        }\n        update.push({ title: title, value: val });\n      });\n    } else {\n      update = values;\n    }\n    newData.tags = update;\n    return this.update({ data: newData });\n  }\n\n  popManualTag(value) {\n    const tags = this.data.data.tags;\n    if (!tags) return;\n\n    let update = tags.filter((el) => el.value != value);\n    let newData = {\n      tags: update,\n    };\n    return this.update({ data: newData });\n  }\n\n  roll(options = {}) {\n    switch (this.type) {\n      case \"weapon\":\n        this.rollWeapon(options);\n        break;\n      case \"spell\":\n        this.spendSpell(options);\n        break;\n      case \"ability\":\n        if (this.data.data.roll) {\n          this.rollFormula();\n        } else {\n          this.show();\n        }\n        break;\n      case \"item\":\n      case \"armor\":\n        this.show();\n    }\n  }\n\n  /**\n   * Show the item to Chat, creating a chat card which contains follow up attack or damage roll options\n   * @return {Promise}\n   */\n  async show() {\n    // Basic template rendering data\n    const token = this.actor.token;\n    const templateData = {\n      actor: this.actor,\n      tokenId: token ? `${token.parent.id}.${token.id}` : null,\n      item: foundry.utils.duplicate(this.data),\n      data: this.getChatData(),\n      labels: this.labels,\n      isHealing: this.isHealing,\n      hasDamage: this.hasDamage,\n      isSpell: this.data.type === \"spell\",\n      hasSave: this.hasSave,\n      config: CONFIG.OSE,\n    };\n    templateData.data.properties = this.getAutoTagList();\n\n    // Render the chat card template\n    const template = `systems/ose/dist/templates/chat/item-card.html`;\n    const html = await renderTemplate(template, templateData);\n\n    // Basic chat message data\n    const chatData = {\n      user: game.user.id,\n      type: CONST.CHAT_MESSAGE_TYPES.OTHER,\n      content: html,\n      speaker: {\n        actor: this.actor.id,\n        token: this.actor.token,\n        alias: this.actor.name,\n      },\n    };\n\n    // Toggle default roll mode\n    let rollMode = game.settings.get(\"core\", \"rollMode\");\n    if ([\"gmroll\", \"blindroll\"].includes(rollMode))\n      chatData[\"whisper\"] = ChatMessage.getWhisperRecipients(\"GM\");\n    if (rollMode === \"selfroll\") chatData[\"whisper\"] = [game.user.id];\n    if (rollMode === \"blindroll\") chatData[\"blind\"] = true;\n\n    // Create the chat message\n    return ChatMessage.create(chatData);\n  }\n\n  /**\n   * Handle toggling the visibility of chat card content when the name is clicked\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  static _onChatCardToggleContent(event) {\n    event.preventDefault();\n    const header = event.currentTarget;\n    const card = header.closest(\".chat-card\");\n    const content = card.querySelector(\".card-content\");\n    if (content.style.display == \"none\") {\n      $(content).slideDown(200);\n    } else {\n      $(content).slideUp(200);\n    }\n  }\n\n  static async _onChatCardAction(event) {\n    event.preventDefault();\n\n    // Extract card data\n    const button = event.currentTarget;\n    button.disabled = true;\n    const card = button.closest(\".chat-card\");\n    const messageId = card.closest(\".message\").dataset.messageId;\n    const message = game.messages.get(messageId);\n    const action = button.dataset.action;\n\n    // Validate permission to proceed with the roll\n    const isTargetted = action === \"save\";\n    if (!(isTargetted || game.user.isGM || message.isAuthor)) return;\n\n    // Get the Actor from a synthetic Token\n    const actor = this._getChatCardActor(card);\n    if (!actor) return;\n\n    // Get the Item\n    const item = actor.items.get(card.dataset.itemId);\n    if (!item) {\n      return ui.notifications.error(\n        `The requested item ${card.dataset.itemId} no longer exists on Actor ${actor.name}`\n      );\n    }\n\n    // Get card targets\n    let targets = [];\n    if (isTargetted) {\n      targets = this._getChatCardTargets(card);\n    }\n\n    // Attack and Damage Rolls\n    if (action === \"damage\") await item.rollDamage({ event });\n    else if (action === \"formula\") await item.rollFormula({ event });\n    // Saving Throws for card targets\n    else if (action == \"save\") {\n      if (!targets.length) {\n        ui.notifications.warn(\n          `You must have one or more controlled Tokens in order to use this option.`\n        );\n        return (button.disabled = false);\n      }\n      for (let t of targets) {\n        await t.rollSave(button.dataset.save, { event });\n      }\n    }\n\n    // Re-enable the button\n    button.disabled = false;\n  }\n\n  static _getChatCardActor(card) {\n    // Case 1 - a synthetic actor from a Token\n    const tokenKey = card.dataset.tokenId;\n    if (tokenKey) {\n      const [sceneId, tokenId] = tokenKey.split(\".\");\n      const scene = game.scenes.get(sceneId);\n      if (!scene) return null;\n      const tokenData = scene.getEmbeddedDocument(\"Token\", tokenId);\n      if (!tokenData) return null;\n      const token = new Token(tokenData);\n      return token.actor;\n    }\n\n    // Case 2 - use Actor ID directory\n    const actorId = card.dataset.actorId;\n    return game.actors.get(actorId) || null;\n  }\n\n  static _getChatCardTargets(card) {\n    const character = game.user.character;\n    const controlled = canvas.tokens.controlled;\n    const targets = controlled.reduce(\n      (arr, t) => (t.actor ? arr.concat([t.actor]) : arr),\n      []\n    );\n    if (character && controlled.length === 0) targets.push(character);\n    return targets;\n  }\n}\n","import { OseDice } from \"../dice\";\nimport { OseItem } from \"../item/entity\";\n\nexport class OseActor extends Actor {\n  /**\n   * Extends data from base Actor class\n   */\n\n  prepareData() {\n    super.prepareData();\n    const data = this.data.data;\n\n    // Compute modifiers from actor scores\n    this.computeModifiers();\n    this._isSlow();\n    this.computeAC();\n    this.computeEncumbrance();\n    this.computeTreasure();\n\n    // Determine Initiative\n    if (game.settings.get(\"ose\", \"initiative\") != \"group\") {\n      data.initiative.value = data.initiative.mod;\n      if (this.data.type == \"character\") {\n        data.initiative.value += data.scores.dex.init;\n      }\n    } else {\n      data.initiative.value = 0;\n    }\n    data.movement.encounter = Math.floor(data.movement.base / 3);\n  }\n\n  static async update(data, options = {}) {\n    // Compute AAC from AC\n    if (data.data?.ac?.value) {\n      data.data.aac = { value: 19 - data.data.ac.value };\n    } else if (data.data?.aac?.value) {\n      data.data.ac = { value: 19 - data.data.aac.value };\n    }\n\n    // Compute Thac0 from BBA\n    if (data.data?.thac0?.value) {\n      data.data.thac0.bba = 19 - data.data.thac0.value;\n    } else if (data.data?.thac0?.bba) {\n      data.data.thac0.value = 19 - data.data.thac0.bba;\n    }\n\n    super.update(data, options);\n  }\n\n  async createEmbeddedDocuments(embeddedName, data = [], context = {}) {\n    data.map((item) => {\n      if (item.img === undefined) {\n        item.img = OseItem.defaultIcons[item.type];\n      }\n    });\n    return super.createEmbeddedDocuments(embeddedName, data, context);\n  }\n\n  /* -------------------------------------------- */\n  /*  Socket Listeners and Handlers\n    /* -------------------------------------------- */\n  getExperience(value, options = {}) {\n    if (this.data.type != \"character\") {\n      return;\n    }\n    let modified = Math.floor(\n      value + (this.data.data.details.xp.bonus * value) / 100\n    );\n    return this.update({\n      \"data.details.xp.value\": modified + this.data.data.details.xp.value,\n    }).then(() => {\n      const speaker = ChatMessage.getSpeaker({ actor: this });\n      ChatMessage.create({\n        content: game.i18n.format(\"OSE.messages.GetExperience\", {\n          name: this.name,\n          value: modified,\n        }),\n        speaker,\n      });\n    });\n  }\n\n  isNew() {\n    const data = this.data.data;\n    if (this.data.type == \"character\") {\n      let ct = 0;\n      Object.values(data.scores).forEach((el) => {\n        ct += el.value;\n      });\n      return ct == 0 ? true : false;\n    } else if (this.data.type == \"monster\") {\n      let ct = 0;\n      Object.values(data.saves).forEach((el) => {\n        ct += el.value;\n      });\n      return ct == 0 ? true : false;\n    }\n  }\n\n  generateSave(hd) {\n    let saves = {};\n    for (let i = 0; i <= hd; i++) {\n      let tmp = CONFIG.OSE.monster_saves[i];\n      if (tmp) {\n        saves = tmp;\n      }\n    }\n    // Compute Thac0\n    let thac0 = 20;\n    Object.keys(CONFIG.OSE.monster_thac0).forEach((k) => {\n      if (parseInt(hd) < parseInt(k)) {\n        return;\n      }\n      thac0 = CONFIG.OSE.monster_thac0[k];\n    });\n    this.update({\n      \"data.thac0.value\": thac0,\n      \"data.saves\": {\n        death: {\n          value: saves.d,\n        },\n        wand: {\n          value: saves.w,\n        },\n        paralysis: {\n          value: saves.p,\n        },\n        breath: {\n          value: saves.b,\n        },\n        spell: {\n          value: saves.s,\n        },\n      },\n    });\n  }\n\n  /* -------------------------------------------- */\n  /*  Rolls                                       */\n  /* -------------------------------------------- */\n\n  rollHP(options = {}) {\n    let roll = new Roll(this.data.data.hp.hd).roll({ async: false });\n    return this.update({\n      data: {\n        hp: {\n          max: roll.total,\n          value: roll.total,\n        },\n      },\n    });\n  }\n\n  rollSave(save, options = {}) {\n    const label = game.i18n.localize(`OSE.saves.${save}.long`);\n    const rollParts = [\"1d20\"];\n\n    const data = {\n      actor: this.data,\n      roll: {\n        type: \"above\",\n        target: this.data.data.saves[save].value,\n        magic:\n          this.data.type === \"character\" ? this.data.data.scores.wis.mod : 0,\n      },\n      details: game.i18n.format(\"OSE.roll.details.save\", { save: label }),\n    };\n\n    let skip = options?.event?.ctrlKey || options.fastForward;\n\n    const rollMethod =\n      this.data.type == \"character\" ? OseDice.RollSave : OseDice.Roll;\n\n    // Roll and return\n    return rollMethod({\n      event: options.event,\n      parts: rollParts,\n      data: data,\n      skipDialog: skip,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.format(\"OSE.roll.save\", { save: label }),\n      title: game.i18n.format(\"OSE.roll.save\", { save: label }),\n      chatMessage: options.chatMessage,\n    });\n  }\n\n  rollMorale(options = {}) {\n    const rollParts = [\"2d6\"];\n\n    const data = {\n      actor: this.data,\n      roll: {\n        type: \"below\",\n        target: this.data.data.details.morale,\n      },\n    };\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data: data,\n      skipDialog: true,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.localize(\"OSE.roll.morale\"),\n      title: game.i18n.localize(\"OSE.roll.morale\"),\n    });\n  }\n\n  rollLoyalty(options = {}) {\n    const label = game.i18n.localize(`OSE.roll.loyalty`);\n    const rollParts = [\"2d6\"];\n\n    const data = {\n      actor: this.data,\n      roll: {\n        type: \"below\",\n        target: this.data.data.retainer.loyalty,\n      },\n    };\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data: data,\n      skipDialog: true,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: label,\n      title: label,\n    });\n  }\n\n  rollReaction(options = {}) {\n    const rollParts = [\"2d6\"];\n\n    const data = {\n      actor: this.data,\n      roll: {\n        type: \"table\",\n        table: {\n          2: game.i18n.format(\"OSE.reaction.Hostile\", {\n            name: this.data.name,\n          }),\n          3: game.i18n.format(\"OSE.reaction.Unfriendly\", {\n            name: this.data.name,\n          }),\n          6: game.i18n.format(\"OSE.reaction.Neutral\", {\n            name: this.data.name,\n          }),\n          9: game.i18n.format(\"OSE.reaction.Indifferent\", {\n            name: this.data.name,\n          }),\n          12: game.i18n.format(\"OSE.reaction.Friendly\", {\n            name: this.data.name,\n          }),\n        },\n      },\n    };\n\n    let skip =\n      options.event && (options.event.ctrlKey || options.event.metaKey);\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data: data,\n      skipDialog: skip,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.localize(\"OSE.reaction.check\"),\n      title: game.i18n.localize(\"OSE.reaction.check\"),\n    });\n  }\n\n  rollCheck(score, options = {}) {\n    if (this.data.type !== \"character\") return;\n\n    const label = game.i18n.localize(`OSE.scores.${score}.long`);\n    const rollParts = [\"1d20\"];\n\n    const data = {\n      actor: this.data,\n      roll: {\n        type: \"check\",\n        target: this.data.data.scores[score].value,\n      },\n\n      details: game.i18n.format(\"OSE.roll.details.attribute\", {\n        score: label,\n      }),\n    };\n\n    let skip = options?.event?.ctrlKey || options.fastForward;\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data: data,\n      skipDialog: skip,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.format(\"OSE.roll.attribute\", { attribute: label }),\n      title: game.i18n.format(\"OSE.roll.attribute\", { attribute: label }),\n      chatMessage: options.chatMessage,\n    });\n  }\n\n  rollHitDice(options = {}) {\n    const label = game.i18n.localize(`OSE.roll.hd`);\n    const rollParts = [this.data.data.hp.hd];\n    if (this.data.type == \"character\") {\n      rollParts.push(this.data.data.scores.con.mod);\n    }\n\n    const data = {\n      actor: this.data,\n      roll: {\n        type: \"hitdice\",\n      },\n    };\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data: data,\n      skipDialog: true,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: label,\n      title: label,\n    });\n  }\n\n  rollAppearing(options = {}) {\n    if (this.data.type !== \"monster\") return;\n\n    const rollParts = [];\n    let label = \"\";\n    if (options.check == \"wilderness\") {\n      rollParts.push(this.data.data.details.appearing.w);\n      label = \"(2)\";\n    } else {\n      rollParts.push(this.data.data.details.appearing.d);\n      label = \"(1)\";\n    }\n    const data = {\n      actor: this.data,\n      roll: {\n        type: {\n          type: \"appearing\",\n        },\n      },\n    };\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data: data,\n      skipDialog: true,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.format(\"OSE.roll.appearing\", { type: label }),\n      title: game.i18n.format(\"OSE.roll.appearing\", { type: label }),\n    });\n  }\n\n  rollExploration(expl, options = {}) {\n    if (this.data.type !== \"character\") return;\n\n    const label = game.i18n.localize(`OSE.exploration.${expl}.long`);\n    const rollParts = [\"1d6\"];\n\n    const data = {\n      actor: this.data,\n      roll: {\n        type: \"below\",\n        target: this.data.data.exploration[expl],\n        blindroll: true,\n      },\n      details: game.i18n.format(\"OSE.roll.details.exploration\", {\n        expl: label,\n      }),\n    };\n\n    let skip =\n      options.event && (options.event.ctrlKey || options.event.metaKey);\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data: data,\n      skipDialog: skip,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.format(\"OSE.roll.exploration\", { exploration: label }),\n      title: game.i18n.format(\"OSE.roll.exploration\", { exploration: label }),\n    });\n  }\n\n  rollDamage(attData, options = {}) {\n    const data = this.data.data;\n\n    const rollData = {\n      actor: this.data,\n      item: attData.item,\n      roll: {\n        type: \"damage\",\n      },\n    };\n\n    let dmgParts = [];\n    if (!attData.roll.dmg) {\n      dmgParts.push(\"1d6\");\n    } else {\n      dmgParts.push(attData.roll.dmg);\n    }\n\n    // Add Str to damage\n    if (attData.roll.type == \"melee\") {\n      dmgParts.push(data.scores.str.mod);\n    }\n\n    // Damage roll\n    OseDice.Roll({\n      event: options.event,\n      parts: dmgParts,\n      data: rollData,\n      skipDialog: true,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: `${attData.label} - ${game.i18n.localize(\"OSE.Damage\")}`,\n      title: `${attData.label} - ${game.i18n.localize(\"OSE.Damage\")}`,\n    });\n  }\n\n  async targetAttack(data, type, options) {\n    if (game.user.targets.size > 0) {\n      for (let t of game.user.targets.values()) {\n        data.roll.target = t;\n        await this.rollAttack(data, {\n          type: type,\n          skipDialog: options.skipDialog,\n        });\n      }\n    } else {\n      this.rollAttack(data, { type: type, skipDialog: options.skipDialog });\n    }\n  }\n\n  rollAttack(attData, options = {}) {\n    const data = this.data.data;\n    const rollParts = [\"1d20\"];\n    const dmgParts = [];\n    let label = game.i18n.format(\"OSE.roll.attacks\", {\n      name: this.data.name,\n    });\n    if (!attData.item) {\n      dmgParts.push(\"1d6\");\n    } else {\n      label = game.i18n.format(\"OSE.roll.attacksWith\", {\n        name: attData.item.name,\n      });\n      dmgParts.push(attData.item.data.damage);\n    }\n\n    let ascending = game.settings.get(\"ose\", \"ascendingAC\");\n    if (ascending) {\n      rollParts.push(data.thac0.bba.toString());\n    }\n    if (options.type == \"missile\") {\n      rollParts.push(\n        data.scores.dex.mod.toString(),\n        data.thac0.mod.missile.toString()\n      );\n    } else if (options.type == \"melee\") {\n      rollParts.push(\n        data.scores.str.mod.toString(),\n        data.thac0.mod.melee.toString()\n      );\n    }\n    if (attData.item && attData.item.data.bonus) {\n      rollParts.push(attData.item.data.bonus);\n    }\n    let thac0 = data.thac0.value;\n    if (options.type == \"melee\") {\n      dmgParts.push(data.scores.str.mod);\n    }\n    const rollData = {\n      actor: this.data,\n      item: attData.item,\n      itemId: attData.item?._id,\n      roll: {\n        type: options.type,\n        thac0: thac0,\n        dmg: dmgParts,\n        save: attData.roll.save,\n        target: attData.roll.target,\n      },\n    };\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data: rollData,\n      skipDialog: options.skipDialog,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: label,\n      flags: { ose: { roll: \"attack\", itemId: attData.item?._id } },\n      title: label,\n    });\n  }\n\n  async applyDamage(amount = 0, multiplier = 1) {\n    amount = Math.floor(parseInt(amount) * multiplier);\n    const hp = this.data.data.hp;\n\n    // Remaining goes to health\n    const dh = Math.clamped(hp.value - amount, 0, hp.max);\n\n    // Update the Actor\n    return this.update({\n      \"data.hp.value\": dh,\n    });\n  }\n\n  static _valueFromTable(table, val) {\n    let output;\n    for (let i = 0; i <= val; i++) {\n      if (table[i] != undefined) {\n        output = table[i];\n      }\n    }\n    return output;\n  }\n\n  _isSlow() {\n    this.data.data.isSlow = ![...this.data.items.values()].every((item) => {\n      if (\n        item.type !== \"weapon\" ||\n        !item.data.data.slow ||\n        !item.data.data.equipped\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  computeEncumbrance() {\n    if (this.data.type != \"character\") {\n      return;\n    }\n    const data = this.data.data;\n    const option = game.settings.get(\"ose\", \"encumbranceOption\");\n    const items = [...this.data.items.values()];\n    // Compute encumbrance\n    const hasAdventuringGear = items.some((item) => {\n      return item.type === \"item\" && !item.data.data.treasure;\n    });\n\n    let totalWeight = items.reduce((acc, item) => {\n      if (\n        item.type === \"item\" &&\n        ([\"complete\", \"disabled\"].includes(option) || item.data.data.treasure)\n      ) {\n        return acc + item.data.data.quantity.value * item.data.data.weight;\n      }\n      if (\n        [\"weapon\", \"armor\", \"container\"].includes(item.type) &&\n        option !== \"basic\"\n      ) {\n        return acc + item.data.data.weight;\n      }\n      return acc;\n    }, 0);\n\n    if (option === \"detailed\" && hasAdventuringGear) totalWeight += 80;\n\n    // Compute weigth thresholds\n    const max = data.encumbrance.max;\n    const basicSignificantEncumbrance = game.settings.get(\n      \"ose\",\n      \"significantTreasure\"\n    );\n\n    const steps = [\"detailed\", \"complete\"].includes(option)\n      ? [400, 600, 800]\n      : option === \"basic\"\n      ? [basicSignificantEncumbrance]\n      : [];\n\n    const percentSteps = steps.map((s) => (100 * s) / max);\n\n    data.encumbrance = {\n      pct: Math.clamped((100 * parseFloat(totalWeight)) / max, 0, 100),\n      max: max,\n      encumbered: totalWeight > data.encumbrance.max,\n      value: totalWeight,\n      steps: percentSteps,\n    };\n\n    if (data.config.movementAuto && option != \"disabled\") {\n      this._calculateMovement();\n    }\n  }\n\n  _calculateMovement() {\n    const data = this.data.data;\n    const option = game.settings.get(\"ose\", \"encumbranceOption\");\n    const weight = data.encumbrance.value;\n    const delta = data.encumbrance.max - 1600;\n    if ([\"detailed\", \"complete\"].includes(option)) {\n      if (weight >= data.encumbrance.max) {\n        data.movement.base = 0;\n      } else if (weight > 800 + delta) {\n        data.movement.base = 30;\n      } else if (weight > 600 + delta) {\n        data.movement.base = 60;\n      } else if (weight > 400 + delta) {\n        data.movement.base = 90;\n      } else {\n        data.movement.base = 120;\n      }\n    } else if (option === \"basic\") {\n      const armors = this.data.items.filter((i) => i.type === \"armor\");\n      let heaviest = 0;\n      armors.forEach((a) => {\n        const armorData = a.data.data;\n        const weight = armorData.type;\n        const equipped = armorData.equipped;\n        if (equipped) {\n          if (weight === \"light\" && heaviest === 0) {\n            heaviest = 1;\n          } else if (weight === \"heavy\") {\n            heaviest = 2;\n          }\n        }\n      });\n      switch (heaviest) {\n        case 0:\n          data.movement.base = 120;\n          break;\n        case 1:\n          data.movement.base = 90;\n          break;\n        case 2:\n          data.movement.base = 60;\n          break;\n      }\n      if (weight >= data.encumbrance.max) {\n        data.movement.base = 0;\n      } else if (weight >= game.settings.get(\"ose\", \"significantTreasure\")) {\n        data.movement.base -= 30;\n      }\n    }\n  }\n\n  computeTreasure() {\n    if (this.data.type != \"character\") {\n      return;\n    }\n    const data = this.data.data;\n    // Compute treasure\n    let total = 0;\n    let treasure = this.data.items.filter(\n      (i) => i.type == \"item\" && i.data.data.treasure\n    );\n    treasure.forEach((item) => {\n      total += item.data.data.quantity.value * item.data.data.cost;\n    });\n    data.treasure = Math.round(total * 100) / 100.0;\n  }\n\n  computeAC() {\n    if (this.data.type != \"character\") {\n      return;\n    }\n    const data = this.data.data;\n\n    // Compute AC\n    let baseAc = 9;\n    let baseAac = 10;\n    let AcShield = 0;\n    let AacShield = 0;\n\n    data.aac.naked = baseAac + data.scores.dex.mod;\n    data.ac.naked = baseAc - data.scores.dex.mod;\n    const armors = this.data.items.filter((i) => i.type == \"armor\");\n    armors.forEach((a) => {\n      const armorData = a.data.data;\n      if (!armorData.equipped) return;\n      if (armorData.type == \"shield\") {\n        AcShield = armorData.ac.value;\n        AacShield = armorData.aac.value;\n        return;\n      }\n      baseAc = armorData.ac.value;\n      baseAac = armorData.aac.value;\n    });\n    data.aac.value = baseAac + data.scores.dex.mod + AacShield + data.aac.mod;\n    data.ac.value = baseAc - data.scores.dex.mod - AcShield - data.ac.mod;\n    data.ac.shield = AcShield;\n    data.aac.shield = AacShield;\n  }\n\n  computeModifiers() {\n    if (this.data.type != \"character\") {\n      return;\n    }\n    const data = this.data.data;\n\n    const standard = {\n      0: -3,\n      3: -3,\n      4: -2,\n      6: -1,\n      9: 0,\n      13: 1,\n      16: 2,\n      18: 3,\n    };\n    data.scores.str.mod = OseActor._valueFromTable(\n      standard,\n      data.scores.str.value\n    );\n    data.scores.int.mod = OseActor._valueFromTable(\n      standard,\n      data.scores.int.value\n    );\n    data.scores.dex.mod = OseActor._valueFromTable(\n      standard,\n      data.scores.dex.value\n    );\n    data.scores.cha.mod = OseActor._valueFromTable(\n      standard,\n      data.scores.cha.value\n    );\n    data.scores.wis.mod = OseActor._valueFromTable(\n      standard,\n      data.scores.wis.value\n    );\n    data.scores.con.mod = OseActor._valueFromTable(\n      standard,\n      data.scores.con.value\n    );\n\n    const capped = {\n      0: -2,\n      3: -2,\n      4: -1,\n      6: -1,\n      9: 0,\n      13: 1,\n      16: 1,\n      18: 2,\n    };\n    data.scores.dex.init = OseActor._valueFromTable(\n      capped,\n      data.scores.dex.value\n    );\n    data.scores.cha.npc = OseActor._valueFromTable(\n      capped,\n      data.scores.cha.value\n    );\n    data.scores.cha.retain = data.scores.cha.mod + 4;\n    data.scores.cha.loyalty = data.scores.cha.mod + 7;\n\n    const od = {\n      0: 0,\n      3: 1,\n      9: 2,\n      13: 3,\n      16: 4,\n      18: 5,\n    };\n    data.exploration.odMod = OseActor._valueFromTable(\n      od,\n      data.scores.str.value\n    );\n\n    const literacy = {\n      0: \"\",\n      3: \"OSE.Illiterate\",\n      6: \"OSE.LiteracyBasic\",\n      9: \"OSE.Literate\",\n    };\n    data.languages.literacy = OseActor._valueFromTable(\n      literacy,\n      data.scores.int.value\n    );\n\n    const spoken = {\n      0: \"OSE.NativeBroken\",\n      3: \"OSE.Native\",\n      13: \"OSE.NativePlus1\",\n      16: \"OSE.NativePlus2\",\n      18: \"OSE.NativePlus3\",\n    };\n    data.languages.spoken = OseActor._valueFromTable(\n      spoken,\n      data.scores.int.value\n    );\n  }\n}\n","export const registerSettings = function () {\n\n  game.settings.register(\"ose\", \"initiative\", {\n    name: game.i18n.localize(\"OSE.Setting.Initiative\"),\n    hint: game.i18n.localize(\"OSE.Setting.InitiativeHint\"),\n    default: \"group\",\n    scope: \"world\",\n    type: String,\n    config: true,\n    choices: {\n      individual: \"OSE.Setting.InitiativeIndividual\",\n      group: \"OSE.Setting.InitiativeGroup\",\n    },\n  });\n\n  game.settings.register(\"ose\", \"rerollInitiative\", {\n    name: game.i18n.localize(\"OSE.Setting.RerollInitiative\"),\n    hint: game.i18n.localize(\"OSE.Setting.RerollInitiativeHint\"),\n    default: \"reset\",\n    scope: \"world\",\n    type: String,\n    config: true,\n    choices: {\n      keep: \"OSE.Setting.InitiativeKeep\",\n      reset: \"OSE.Setting.InitiativeReset\",\n      reroll: \"OSE.Setting.InitiativeReroll\",\n    }\n  });\n\n  game.settings.register(\"ose\", \"ascendingAC\", {\n    name: game.i18n.localize(\"OSE.Setting.AscendingAC\"),\n    hint: game.i18n.localize(\"OSE.Setting.AscendingACHint\"),\n    default: false,\n    scope: \"world\",\n    type: Boolean,\n    config: true,\n  });\n\n  game.settings.register(\"ose\", \"morale\", {\n    name: game.i18n.localize(\"OSE.Setting.Morale\"),\n    hint: game.i18n.localize(\"OSE.Setting.MoraleHint\"),\n    default: false,\n    scope: \"world\",\n    type: Boolean,\n    config: true,\n  });\n\n  game.settings.register(\"ose\", \"encumbranceOption\", {\n    name: game.i18n.localize(\"OSE.Setting.Encumbrance\"),\n    hint: game.i18n.localize(\"OSE.Setting.EncumbranceHint\"),\n    default: \"detailed\",\n    scope: \"world\",\n    type: String,\n    config: true,\n    choices: {\n      disabled: \"OSE.Setting.EncumbranceDisabled\",\n      basic: \"OSE.Setting.EncumbranceBasic\",\n      detailed: \"OSE.Setting.EncumbranceDetailed\",\n      complete: \"OSE.Setting.EncumbranceComplete\",\n    },\n  });\n\n  game.settings.register(\"ose\", \"significantTreasure\", {\n    name: game.i18n.localize(\"OSE.Setting.SignificantTreasure\"),\n    hint: game.i18n.localize(\"OSE.Setting.SignificantTreasureHint\"),\n    default: 800,\n    scope: \"world\",\n    type: Number,\n    config: true,\n  });\n\n  game.settings.register(\"ose\", \"languages\", {\n    name: game.i18n.localize(\"OSE.Setting.Languages\"),\n    hint: game.i18n.localize(\"OSE.Setting.LanguagesHint\"),\n    default: \"\",\n    scope: \"world\",\n    type: String,\n    config: true,\n  });\n   game.settings.register('ose', 'applyDamageOption', {\n    name: game.i18n.localize('OSE.Setting.applyDamageOption'),\n    hint: game.i18n.localize('OSE.Setting.applyDamageOptionHint'),\n    default: 'selected',\n    scope: 'world',\n    type: String,\n    config: true,\n    choices: {\n      selected: 'OSE.Setting.damageSelected',\n      targeted: 'OSE.Setting.damageTarget'\n    },\n  });\n};\n","import { OSE } from \"./config\";\n\nexport const registerHelpers = async function () {\n  // Handlebars template helpers\n  Handlebars.registerHelper(\"eq\", function (a, b) {\n    return a == b;\n  });\n\n  Handlebars.registerHelper(\"gt\", function (a, b) {\n    return a >= b;\n  });\n\n  Handlebars.registerHelper(\"mod\", function (val) {\n    if (val > 0) {\n      return `+${val}`;\n    } else if (val < 0) {\n      return `${val}`;\n    } else {\n      return \"0\";\n    }\n  });\n\n  Handlebars.registerHelper(\"add\", function (lh, rh) {\n    return parseInt(lh) + parseInt(rh);\n  });\n\n  Handlebars.registerHelper(\"subtract\", function (lh, rh) {\n    return parseInt(lh) - parseInt(rh);\n  });\n\n  Handlebars.registerHelper(\"divide\", function (lh, rh) {\n    return Math.floor(parseFloat(lh) / parseFloat(rh));\n  });\n\n  Handlebars.registerHelper(\"mult\", function (lh, rh) {\n    return Math.round(100 * parseFloat(lh) * parseFloat(rh)) / 100;\n  });\n\n  Handlebars.registerHelper(\"roundWeight\", function (weight) {\n    return Math.round(parseFloat(weight) / 100) / 10;\n  });\n\n  Handlebars.registerHelper(\"getTagIcon\", function (tag) {\n    let idx = Object.keys(CONFIG.OSE.tags).find(\n      (k) => CONFIG.OSE.tags[k] == tag\n    );\n    return CONFIG.OSE.tag_images[idx];\n  });\n\n  Handlebars.registerHelper(\"counter\", function (status, value, max) {\n    return status\n      ? Math.clamped((100.0 * value) / max, 0, 100)\n      : Math.clamped(100 - (100.0 * value) / max, 0, 100);\n  });\n\n  Handlebars.registerHelper(\"times\", function (n, block) {\n    var accum = \"\";\n    for (let i = 0; i < n; ++i) accum += block.fn(i);\n    return accum;\n  });\n\n  Handlebars.registerHelper(\"path\", function (relativePath) {\n    return `${OSE.systemPath()}${relativePath}`;\n  });\n};\n","export const registerFVTTModuleAPIs = () => {\n  // see docs for more info https://github.com/fantasycalendar/FoundryVTT-ItemPiles/blob/master/docs/api.md\n  Hooks.once(\"item-piles-ready\", async function () {\n    if (ItemPiles.API.ACTOR_CLASS_TYPE !== \"character\")\n      ItemPiles.API.setActorClassType(\"character\");\n    if (ItemPiles.API.ITEM_QUANTITY_ATTRIBUTE !== \"data.quantity.value\")\n      ItemPiles.API.setItemQuantityAttribute(\"data.quantity.value\");\n    if (\n      ItemPiles.API.ITEM_FILTERS !==\n      [\n        {\n          path: \"type\",\n          filters: \"spell,ability\",\n        },\n      ]\n    )\n      ItemPiles.API.setItemFilters([\n        {\n          path: \"type\",\n          filters: \"spell,ability\",\n        },\n      ]);\n  });\n};\n","/**\n * This function is used to hook into the Chat Log context menu to add additional options to each message\n * These options make it easy to conveniently apply damage to controlled tokens based on the value of a Roll\n *\n * @param {HTMLElement} html    The Chat Message being rendered\n * @param {Array} options       The Array of Context Menu options\n *\n * @return {Array}              The extended options Array including new context choices\n */\nexport const addChatMessageContextOptions = function (html, options) {\n  let canApply = (li) =>\n    canvas.tokens.controlled.length && li.find(\".dice-roll\").length;\n  options.push(\n    {\n      name: game.i18n.localize(\"OSE.messages.applyDamage\"),\n      icon: '<i class=\"fas fa-user-minus\"></i>',\n      condition: canApply,\n      callback: (li) => applyChatCardDamage(li, 1),\n    },\n    {\n      name: game.i18n.localize(\"OSE.messages.applyHealing\"),\n      icon: '<i class=\"fas fa-user-plus\"></i>',\n      condition: canApply,\n      callback: (li) => applyChatCardDamage(li, -1),\n    }\n  );\n  return options;\n};\n\n/* -------------------------------------------- */\n\nexport const addChatMessageButtons = function (msg, html, data) {\n  // Hide blind rolls\n  let blindable = html.find(\".blindable\");\n  if (\n    msg.data.blind &&\n    !game.user.isGM &&\n    blindable &&\n    blindable.data(\"blind\") === true\n  ) {\n    blindable.replaceWith(\n      \"<div class='dice-roll'><div class='dice-result'><div class='dice-formula'>???</div></div></div>\"\n    );\n  }\n  // Buttons\n  let roll = html.find(\".damage-roll\");\n  if (roll.length > 0) {\n    let total = roll.find(\".dice-total\");\n    let value = total.text();\n    roll.append(\n      $(\n        `<div class=\"dice-damage\"><button type=\"button\" data-action=\"apply-damage\"><i class=\"fas fa-tint\"></i></button></div>`\n      )\n    );\n    roll.find('button[data-action=\"apply-damage\"]').click((ev) => {\n      ev.preventDefault();\n      applyChatCardDamage(roll, 1);\n    });\n  }\n};\n\n/**\n * Apply rolled dice damage to the token or tokens which are currently controlled.\n * This allows for damage to be scaled by a multiplier to account for healing, critical hits, or resistance\n *\n * @param {HTMLElement} roll    The chat entry which contains the roll data\n * @param {Number} multiplier   A damage multiplier to apply to the rolled damage.\n * @return {Promise}\n */\nfunction applyChatCardDamage(roll, multiplier) {\n  const amount = roll.find(\".dice-total\").last().text();\n  const dmgTgt = game.settings.get(\"ose\", \"applyDamageOption\");\n  if (dmgTgt === `targeted`) {\n    game.user.targets.forEach(async (t) => {\n      if (game.user.isGM) return await t.actor.applyDamage(amount, multiplier);\n    });\n  }\n  if (dmgTgt === `selected`) {\n    canvas.tokens.controlled.forEach(async (t) => {\n      if (game.user.isGM) return await t.actor.applyDamage(amount, multiplier);\n    });\n  }\n}\n\n/* -------------------------------------------- */\n","import { OSE } from \"./config\";\n\nexport const augmentTable = (table, html, data) => {\n  // Treasure Toggle\n  const isTreasureTable = Boolean(table.object.getFlag(\"ose\", \"treasure\"));\n\n  let treasureTableToggle = $(\n    \"<div class='toggle-treasure' title='Toggle Treasure Table'></div>\"\n  );\n  treasureTableToggle.toggleClass(\"active\", isTreasureTable);\n\n  let head = html.find(\".sheet-header\");\n  head.append(treasureTableToggle);\n\n  html.find(\".toggle-treasure\").click((ev) => {\n    const isTreasure = Boolean(table.object.getFlag(\"ose\", \"treasure\"));\n    table.object.setFlag(\"ose\", \"treasure\", !isTreasure);\n  });\n\n  // Treasure table formatting\n  if (!isTreasureTable) {\n    return;\n  }\n\n  // Hide irrelevant standard fields\n  html.find(\".result-range\").hide(); // We only hide this column because the underlying model requires two fields for the range and throw an error if they are missing\n  html.find(\".normalize-results\").remove();\n\n  let chanceHeader = html.find(\".table-header .result-weight\");\n  chanceHeader.text(\"Chance (%)\");\n\n  let chanceColumn = html.find(\".result-weight\");\n  chanceColumn.css(\"flex\", \"0 0 75px\");\n\n  let formula = html.find(\"input[name=formula]\");\n  formula.attr(\"value\", \"1d100\");\n  formula.attr(\"disabled\", true);\n\n  // Replace Roll button\n  const roll = `<button class=\"roll-treasure\" type=\"button\"><i class=\"fas fa-gem\"></i> ${game.i18n.localize(\n    \"OSE.table.treasure.roll\"\n  )}</button>`;\n  html.find(\".sheet-footer .roll\").replaceWith(roll);\n\n  html.find(\".roll-treasure\").click((ev) => {\n    rollTreasure(table.object, { event: ev });\n  });\n};\n\nfunction drawTreasure(table, data) {\n  const percent = (chance) => {\n    const roll = new Roll(\"1d100\");\n    roll.evaluate({ async: false });\n    return roll.total <= chance;\n  };\n  data.treasure = {};\n  if (table.getFlag(\"ose\", \"treasure\")) {\n    table.results.forEach((r) => {\n      if (percent(r.data.weight)) {\n        const text = r.getChatText(r);\n        data.treasure[r.id] = {\n          img: r.data.img,\n          text: TextEditor.enrichHTML(text),\n        };\n        if (\n          r.data.type === CONST.TABLE_RESULT_TYPES.DOCUMENT &&\n          r.data.collection === \"RollTable\"\n        ) {\n          const embeddedTable = game.tables.get(r.data.resultId);\n          drawTreasure(embeddedTable, data.treasure[r.id]);\n        }\n      }\n    });\n  } else {\n    const results = table.evaluate({ async: false }).results;\n    results.forEach((s) => {\n      const text = TextEditor.enrichHTML(table._getResultChatText(s));\n      data.treasure[s.id] = { img: s.data.img, text: text };\n    });\n  }\n  return data;\n}\n\nasync function rollTreasure(table, options = {}) {\n  // Draw treasure\n  const data = drawTreasure(table, {});\n  let templateData = {\n    treasure: data.treasure,\n    table: table,\n  };\n\n  // Animation\n  if (options.event) {\n    let results = $(options.event.currentTarget.parentElement)\n      .prev()\n      .find(\".table-result\");\n    results.each((_, item) => {\n      item.classList.remove(\"active\");\n      if (data.treasure[item.dataset.resultId]) {\n        item.classList.add(\"active\");\n      }\n    });\n  }\n\n  let html = await renderTemplate(\n    `${OSE.systemPath()}/templates/chat/roll-treasure.html`,\n    templateData\n  );\n\n  let chatData = {\n    content: html,\n    // sound: \"systems/ose/assets/coins.mp3\"\n  };\n\n  let rollMode = game.settings.get(\"core\", \"rollMode\");\n  if ([\"gmroll\", \"blindroll\"].includes(rollMode))\n    chatData[\"whisper\"] = ChatMessage.getWhisperRecipients(\"GM\");\n  if (rollMode === \"selfroll\") chatData[\"whisper\"] = [game.user._id];\n  if (rollMode === \"blindroll\") chatData[\"blind\"] = true;\n\n  ChatMessage.create(chatData);\n}\n","\n/* -------------------------------------------- */\n/*  Hotbar Macros                               */\n/* -------------------------------------------- */\n\n/**\n * Create a Macro from an Item drop.\n * Get an existing item macro if one exists, otherwise create a new one.\n * @param {Object} data     The dropped data\n * @param {number} slot     The hotbar slot to use\n * @returns {Promise}\n */\nexport async function createOseMacro(data, slot) {\n    if ( data.type !== \"Item\" ) return;\n    if (!( \"data\" in data ) ) return ui.notifications.warn(\"You can only create macro buttons for owned Items\");\n    const item = data.data;\n\n    // Create the macro command\n    const command = `game.ose.rollItemMacro(\"${item.name}\");`;\n    let macro = game.macros.contents.find(m => (m.name === item.name) && (m.command === command));\n    if ( !macro ) {\n      macro = await Macro.create({\n        name: item.name,\n        type: \"script\",\n        img: item.img,\n        command: command,\n        flags: {\"ose.itemMacro\": true}\n      });\n    }\n    game.user.assignHotbarMacro(macro, slot);\n    return false;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Create a Macro from an Item drop.\n   * Get an existing item macro if one exists, otherwise create a new one.\n   * @param {string} itemName\n   * @return {Promise}\n   */\n  export function rollItemMacro(itemName) {\n    const speaker = ChatMessage.getSpeaker();\n    let actor;\n    if ( speaker.token ) actor = game.actors.tokens[speaker.token];\n    if ( !actor ) actor = game.actors.get(speaker.actor);\n\n    // Get matching items\n    const items = actor ? actor.items.filter(i => i.name === itemName) : [];\n    if ( items.length > 1 ) {\n      ui.notifications.warn(`Your controlled Actor ${actor.name} has more than one Item with name ${itemName}. The first matched item will be chosen.`);\n    } else if ( items.length === 0 ) {\n      return ui.notifications.warn(`Your controlled Actor does not have an item named ${itemName}`);\n    }\n    const item = items[0];\n\n    // Trigger the item roll\n      return item.roll();\n  }\n","export class OseParty {\n  static get currentParty() {\n    const characters = game.actors.filter(\n      (act) =>\n        act.data.type === \"character\" &&\n        act.data.flags.ose &&\n        act.data.flags.ose.party === true);\n\n    return characters;\n  }\n}","import { OseParty } from \"./party\";\nimport { OSE } from \"../config\";\n\nexport class OsePartyXP extends FormApplication {\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"ose\", \"dialog\", \"party-xp\"],\n      template: `${OSE.systemPath()}/templates/apps/party-xp.html`,\n      width: 300,\n      height: \"auto\",\n      resizable: false,\n      closeOnSubmit: true,\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add the Entity name into the window title\n   * @type {String}\n   */\n  get title() {\n    return game.i18n.localize(\"OSE.dialog.xp.deal\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Construct and return the data object used to render the HTML template for this form application.\n   * @return {Object}\n   */\n  getData() {\n    let data = {\n      actors: OseParty.currentParty,\n      data: this.object,\n      config: CONFIG.OSE,\n      user: game.user,\n      settings: settings,\n    };\n    return data;\n  }\n\n  _onDrop(event) {\n    event.preventDefault();\n    // WIP Drop Item Quantity\n    let data;\n    try {\n      data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n      if (data.type !== \"Item\") return;\n    } catch (err) {\n      return false;\n    }\n  }\n  /* -------------------------------------------- */\n\n  _updateObject(event, formData) {\n    this._dealXP(event);\n  }\n\n  _calculateShare(ev) {\n    const currentParty = OseParty.currentParty;\n\n    const html = $(this.form);\n    const totalXP = html.find('input[name=\"total\"]').val();\n    const baseXpShare = parseFloat(totalXP) / currentParty.length;\n\n    currentParty.forEach((a) => {\n      const xpShare = Math.floor(\n        (a.data.data.details.xp.share / 100) * baseXpShare\n      );\n      html.find(`li[data-actor-id='${a.id}'] input`).val(xpShare);\n    });\n  }\n\n  _dealXP(ev) {\n    const html = $(this.form);\n    const rows = html.find(\".actor\");\n    rows.each((_, row) => {\n      const qRow = $(row);\n      const value = qRow.find(\"input\").val();\n      const id = qRow.data(\"actorId\");\n      const actor = OseParty.currentParty.find((e) => e.id === id);\n      if (value) {\n        actor.getExperience(Math.floor(parseInt(value)));\n      }\n    });\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    const totalField = html.find('input[name=\"total\"]');\n    totalField.on(\"input\", this._calculateShare.bind(this));\n\n    html.find('button[data-action=\"deal-xp\"').click((event) => {\n      super.submit(event);\n    });\n  }\n}\n","import { OsePartyXP } from \"./party-xp\";\nimport { OseParty } from \"./party\";\nimport { OSE } from \"../config\";\n\nconst Party = {\n  partySheet: void 0,\n};\n\nexport class OsePartySheet extends FormApplication {\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"ose\", \"dialog\", \"party-sheet\"],\n      template: `${OSE.systemPath()}/templates/apps/party-sheet.html`,\n      width: 280,\n      height: 400,\n      resizable: true,\n      dragDrop: [\n        { dragSelector: \".actor-list .actor\", dropSelector: \".party-members\" },\n      ],\n      closeOnSubmit: false,\n    });\n  }\n\n  static init() {\n    Party.partySheet = new OsePartySheet();\n  }\n\n  static showPartySheet(options = {}) {\n    OsePartySheet.partySheet.render(true, { focus: true, ...options });\n  }\n\n  static get partySheet() {\n    return Party.partySheet;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add the Entity name into the window title\n   * @type {String}\n   */\n  get title() {\n    return game.i18n.localize(\"OSE.dialog.partysheet\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Construct and return the data object used to render the HTML template for this form application.\n   * @return {Object}\n   */\n  getData() {\n    const settings = {\n      ascending: game.settings.get(\"ose\", \"ascendingAC\"),\n    };\n\n    let data = {\n      partyActors: OseParty.currentParty,\n      // data: this.object,\n      config: CONFIG.OSE,\n      user: game.user,\n      settings: settings,\n    };\n    return data;\n  }\n\n  async _addActorToParty(actor) {\n    if (actor.type !== \"character\") {\n      return;\n    }\n\n    await actor.setFlag(\"ose\", \"party\", true);\n  }\n\n  async _removeActorFromParty(actor) {\n    await actor.setFlag(\"ose\", \"party\", false);\n  }\n\n  /* ---------------------- */\n  /* --Drag&Drop Behavior-- */\n  /* ---------------------- */\n\n  /* - Adding to the Party Sheet -*/\n  _onDrop(event) {\n    event.preventDefault();\n\n    // WIP Drop Items\n    let data;\n    try {\n      data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n\n      switch (data.type) {\n        case \"Actor\":\n          return this._onDropActor(event, data);\n        case \"Folder\":\n          return this._onDropFolder(event, data);\n      }\n    } catch (err) {\n      return false;\n    }\n  }\n\n  _onDropActor(event, data) {\n    if (data.type !== \"Actor\") {\n      return;\n    }\n\n    const actors = game.actors;\n    let droppedActor = actors.find((actor) => actor.id === data.id);\n\n    this._addActorToParty(droppedActor);\n  }\n\n  _recursiveAddFolder(folder) {\n    folder.content.forEach((actor) => this._addActorToParty(actor));\n    folder.children.forEach((folder) => this._recursiveAddFolder(folder));\n  }\n\n  _onDropFolder(event, data) {\n    if (data.documentName !== \"Actor\") {\n      return;\n    }\n\n    const folder = game.folders.get(data.id);\n    if (!folder) return;\n\n    this._recursiveAddFolder(folder);\n  }\n\n  /* - Dragging from the Party Sheet - */\n  _onDragStart(event) {\n    try {\n      const actorId = event.currentTarget.dataset.actorId;\n\n      const dragData = {\n        id: actorId,\n        type: \"Actor\",\n      };\n\n      // Set data transfer\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n    } catch (error) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /* -------------------------------------------- */\n\n  async _dealXP(ev) {\n    new OsePartyXP(this.object, {}).render(true);\n  }\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find(\".header #deal-xp\").click(this._dealXP.bind(this));\n\n    // Actor buttons\n    const getActor = (event) => {\n      const id = event.currentTarget.closest(\".actor\").dataset.actorId;\n      return game.actors.get(id);\n    };\n\n    html.find(\".field-img button[data-action='open-sheet']\").click((event) => {\n      getActor(event).sheet.render(true);\n    });\n\n    html\n      .find(\".field-img button[data-action='remove-actor']\")\n      .click(async (event) => {\n        await this._removeActorFromParty(getActor(event));\n      });\n  }\n}\n","import { OsePartySheet } from \"./party/party-sheet\";\n\nexport const addControl = (object, html) => {\n  let control = `<button class='ose-party-sheet' type=\"button\" title='${game.i18n.localize(\n    \"OSE.dialog.partysheet\"\n  )}'><i class='fas fa-users'></i></button>`;\n  html.find(\".fas.fa-search\").replaceWith($(control));\n  html.find(\".ose-party-sheet\").click((ev) => {\n    ev.preventDefault();\n    Hooks.call(\"OSE.Party.showSheet\");\n  });\n};\n\nexport const update = (actor, data) => {\n  const partyFlag = actor.getFlag(\"ose\", \"party\");\n\n  if (partyFlag === null) {\n    return;\n  }\n\n  OsePartySheet.partySheet.render();\n};\n","import { OSE } from \"./config\";\n\nexport class OseCombat {\n  static STATUS_SLOW = -789;\n  static STATUS_DIZZY = -790;\n\n  static debounce(callback, wait) {\n    let timeoutId = null;\n    return (...args) => {\n      window.clearTimeout(timeoutId);\n      timeoutId = window.setTimeout(() => {\n        callback.apply(null, args);\n      }, wait);\n    };\n  }\n  static async rollInitiative(combat, data) {\n    // Check groups\n    data.combatants = [];\n    let groups = {};\n    combat.data.combatants.forEach((cbt) => {\n      const group = cbt.getFlag(\"ose\", \"group\");\n      groups[group] = { present: true };\n      data.combatants.push(cbt);\n    });\n    // Roll init\n    for (let group in groups) {\n      // Object.keys(groups).forEach((group) => {\n      let roll = new Roll(\"1d6\").evaluate({ async: false });\n      await roll.toMessage({\n        flavor: game.i18n.format(\"OSE.roll.initiative\", {\n          group: CONFIG[\"OSE\"].colors[group],\n        }),\n      });\n      groups[group].initiative = roll.total;\n      // });\n    }\n    // Set init\n    for (let i = 0; i < data.combatants.length; ++i) {\n      if (game.user.isGM) {\n        if (!data.combatants[i].actor) {\n          return;\n        }\n        if (data.combatants[i].actor.data.data.isSlow) {\n          await data.combatants[i].update({\n            initiative: OseCombat.STATUS_SLOW,\n          });\n        } else {\n          const group = data.combatants[i].getFlag(\"ose\", \"group\");\n          this.debounce(\n            data.combatants[i].update({ initiative: groups[group].initiative }),\n            500\n          );\n        }\n      }\n    }\n\n    await combat.setupTurns();\n  }\n\n  static async resetInitiative(combat, data) {\n    let reroll = game.settings.get(\"ose\", \"rerollInitiative\");\n    if (![\"reset\", \"reroll\"].includes(reroll)) {\n      return;\n    }\n    combat.resetAll();\n  }\n\n  static async individualInitiative(combat, data) {\n    let updates = [];\n    let rolls = [];\n    for (let i = 0; i < combat.data.combatants.size; i++) {\n      let c = combat.data.combatants.contents[i];\n      // This comes from foundry.js, had to remove the update turns thing\n      // Roll initiative\n      const cf = await c._getInitiativeFormula(c);\n      const roll = await c.getInitiativeRoll(cf);\n      rolls.push(roll);\n      const data = { _id: c.id };\n      updates.push(data);\n    }\n    //combine init rolls\n    const pool = PoolTerm.fromRolls(rolls);\n    const combinedRoll = await Roll.fromTerms([pool]);\n    //get evaluated chat message\n    const evalRoll = await combinedRoll.toMessage({}, { create: false });\n    let rollArr = combinedRoll.terms[0].rolls;\n    let msgContent = ``;\n    for (let i = 0; i < rollArr.length; i++) {\n      let roll = rollArr[i];\n      //get combatant\n      let cbt = game.combats.viewed.combatants.find(\n        (c) => c.id == updates[i]._id\n      );\n      //add initiative value to update\n      //check if actor is slow\n      let value = cbt.actor.data.data.isSlow\n        ? OseCombat.STATUS_SLOW\n        : roll.total;\n      //check if actor is defeated\n      if (combat.settings.skipDefeated && cbt.isDefeated) {\n        value = OseCombat.STATUS_DIZZY;\n      }\n      updates[i].initiative = value;\n\n      //render template\n      let template = `${OSE.systemPath()}/dist/templates/chat/roll-individual-initiative.html`;\n      let tData = {\n        name: cbt.name,\n        formula: roll.formula,\n        result: roll.result,\n        total: roll.total,\n      };\n      let rendered = await renderTemplate(template, tData);\n      msgContent += rendered;\n    }\n    evalRoll.content = `\n    <details>\n    <summary>${game.i18n.localize(\"OSE.roll.individualInitGroup\")}</summary>\n    ${msgContent}\n    </details>`;\n    ChatMessage.create(evalRoll);\n    //update tracker\n    if (game.user.isGM)\n      await combat.updateEmbeddedDocuments(\"Combatant\", updates);\n    data.turn = 0;\n  }\n\n  static format(object, html, user) {\n    html.find(\".initiative\").each((_, span) => {\n      span.innerHTML =\n        span.innerHTML == `${OseCombat.STATUS_SLOW}`\n          ? '<i class=\"fas fa-weight-hanging\"></i>'\n          : span.innerHTML;\n      span.innerHTML =\n        span.innerHTML == `${OseCombat.STATUS_DIZZY}`\n          ? '<i class=\"fas fa-dizzy\"></i>'\n          : span.innerHTML;\n    });\n\n    html.find(\".combatant\").each((_, ct) => {\n      // Append spellcast and retreat\n      const controls = $(ct).find(\".combatant-controls .combatant-control\");\n      const cmbtant = object.viewed.combatants.get(ct.dataset.combatantId);\n      const moveInCombat = cmbtant.getFlag(\"ose\", \"moveInCombat\");\n      const preparingSpell = cmbtant.getFlag(\"ose\", \"prepareSpell\");\n      const moveActive = moveInCombat ? \"active\" : \"\";\n      controls\n        .eq(1)\n        .after(\n          `<a class='combatant-control move-combat ${moveActive}' title=\"${game.i18n.localize(\n            \"OSE.CombatFlag.RetreatFromMeleeDeclared\"\n          )}\"><i class='fas fa-walking'></i></a>`\n        );\n      const spellActive = preparingSpell ? \"active\" : \"\";\n      controls\n        .eq(1)\n        .after(\n          `<a class='combatant-control prepare-spell ${spellActive}' title=\"${game.i18n.localize(\n            \"OSE.CombatFlag.SpellDeclared\"\n          )}\"><i class='fas fa-magic'></i></a>`\n        );\n    });\n    OseCombat.announceListener(html);\n\n    let init = game.settings.get(\"ose\", \"initiative\") === \"group\";\n    if (!init) {\n      return;\n    }\n\n    html.find('.combat-control[data-control=\"rollNPC\"]').remove();\n    html.find('.combat-control[data-control=\"rollAll\"]').remove();\n    let trash = html.find(\n      '.encounters .combat-control[data-control=\"endCombat\"]'\n    );\n    $(\n      '<a class=\"combat-control\" data-control=\"reroll\"><i class=\"fas fa-dice\"></i></a>'\n    ).insertBefore(trash);\n\n    html.find(\".combatant\").each((_, ct) => {\n      // Can't roll individual inits\n      $(ct).find(\".roll\").remove();\n\n      // Get group color\n      const cmbtant = object.viewed.combatants.get(ct.dataset.combatantId);\n      let color = cmbtant.getFlag(\"ose\", \"group\");\n\n      // Append colored flag\n      let controls = $(ct).find(\".combatant-controls\");\n      controls.prepend(\n        `<a class='combatant-control flag' style='color:${color}' title=\"${CONFIG.OSE.colors[color]}\"><i class='fas fa-flag'></i></a>`\n      );\n    });\n    OseCombat.addListeners(html);\n  }\n\n  static updateCombatant(combatant, data) {\n    let init = game.settings.get(\"ose\", \"initiative\");\n    // Why do you reroll ?\n    if (combatant.actor.data.data.isSlow) {\n      data.initiative = -789;\n      return;\n    }\n    if (data.initiative && init == \"group\") {\n      let groupInit = data.initiative;\n      const cmbtGroup = combatant.getFlag(\"ose\", \"group\");\n      // Check if there are any members of the group with init\n      game.combats.viewed.combatants.forEach((ct) => {\n        const group = ct.getFlag(\"ose\", \"group\");\n        if (\n          ct.initiative &&\n          ct.initiative != \"-789.00\" &&\n          ct.id != data.id &&\n          group == cmbtGroup\n        ) {\n          // Set init\n          if (game.user.isGM) {\n            combatant.update({ initiative: parseInt(groupInit) });\n          }\n        }\n      });\n    }\n  }\n\n  static announceListener(html) {\n    html.find(\".combatant-control.prepare-spell\").click((ev) => {\n      ev.preventDefault();\n      // Toggle spell announcement\n      let id = $(ev.currentTarget).closest(\".combatant\")[0].dataset.combatantId;\n      let isActive = ev.currentTarget.classList.contains(\"active\");\n      const combatant = game.combat.combatants.get(id);\n      combatant.setFlag(\"ose\", \"prepareSpell\", !isActive);\n    });\n    html.find(\".combatant-control.move-combat\").click((ev) => {\n      ev.preventDefault();\n      // Toggle spell announcement\n      let id = $(ev.currentTarget).closest(\".combatant\")[0].dataset.combatantId;\n      let isActive = ev.currentTarget.classList.contains(\"active\");\n      const combatant = game.combat.combatants.get(id);\n      if (game.user.isGM) {\n        combatant.setFlag(\"ose\", \"moveInCombat\", !isActive);\n      }\n    });\n  }\n\n  static addListeners(html) {\n    // Cycle through colors\n    html.find(\".combatant-control.flag\").click((ev) => {\n      if (!game.user.isGM) {\n        return;\n      }\n      let currentColor = ev.currentTarget.style.color;\n      let colors = Object.keys(CONFIG.OSE.colors);\n      let index = colors.indexOf(currentColor);\n      if (index + 1 == colors.length) {\n        index = 0;\n      } else {\n        index++;\n      }\n      let id = $(ev.currentTarget).closest(\".combatant\")[0].dataset.combatantId;\n      const combatant = game.combat.combatants.get(id);\n      if (game.user.isGM) {\n        combatant.setFlag(\"ose\", \"group\", colors[index]);\n      }\n    });\n\n    html.find('.combat-control[data-control=\"reroll\"]').click((ev) => {\n      if (!game.combat) {\n        return;\n      }\n      let data = {};\n      OseCombat.rollInitiative(game.combat, data);\n      if (game.user.isGM) {\n        game.combat.update({ data: data }).then(() => {\n          game.combat.setupTurns();\n        });\n      }\n    });\n  }\n\n  static addCombatant(combat, data, options, id) {\n    let token = canvas.tokens.get(data.tokenId);\n    let color = \"black\";\n    switch (token.data.disposition) {\n      case -1:\n        color = \"red\";\n        break;\n      case 0:\n        color = \"yellow\";\n        break;\n      case 1:\n        color = \"green\";\n        break;\n    }\n    data.flags = {\n      ose: {\n        group: color,\n      },\n    };\n    combat.data.update({ flags: { ose: { group: color } } });\n  }\n\n  static activateCombatant(li) {\n    const turn = game.combat.turns.findIndex(\n      (turn) => turn.id === li.data(\"combatant-id\")\n    );\n    if (game.user.isGM) {\n      game.combat.update({ turn: turn });\n    }\n  }\n\n  static addContextEntry(html, options) {\n    options.unshift({\n      name: \"Set Active\",\n      icon: '<i class=\"fas fa-star-of-life\"></i>',\n      callback: OseCombat.activateCombatant,\n    });\n  }\n\n  static async preUpdateCombat(combat, data, diff, id) {\n    let init = game.settings.get(\"ose\", \"initiative\");\n    let reroll = game.settings.get(\"ose\", \"rerollInitiative\");\n    if (!data.round) {\n      return;\n    }\n    if (data.round !== 1) {\n      if (reroll === \"reset\") {\n        OseCombat.resetInitiative(combat, data, diff, id);\n        return;\n      } else if (reroll === \"keep\") {\n        return;\n      }\n    }\n    if (init === \"group\") {\n      OseCombat.rollInitiative(combat, data, diff, id);\n    } else if (init === \"individual\") {\n      OseCombat.individualInitiative(combat, data, diff, id);\n    }\n  }\n}\n","import { OseItem } from \"./item/entity\";\nimport { OSE } from \"./config\";\n\nexport const RenderCompendium = async function (object, html, d) {\n  if (object.documentName != \"Item\") {\n    return;\n  }\n  const render = html[0].querySelectorAll(\".item\");\n  const docs = await d.collection.getDocuments();\n\n  render.forEach(async function (item, i) {\n    const id = render[i].dataset.documentId;\n\n    const element = docs.filter((d) => d.id === id)[0];\n    const tagTemplate = $.parseHTML(\n      await renderTemplate(\n        `${OSE.systemPath()}/templates/actors/partials/item-auto-tags-partial.html`,\n        { tags: OseItem.prototype.getAutoTagList.call(element) }\n      )\n    );\n\n    $(item).append(tagTemplate);\n  });\n};\n\nexport const RenderDirectory = async function (object, html) {\n  if (object.id != \"items\") {\n    return;\n  }\n\n  const render = html[0].querySelectorAll(\".item\");\n  const content = object.documents;\n\n  render.forEach(async function (item) {\n    const foundryDocument = content.find(\n      (e) => e.id == item.dataset.documentId\n    );\n\n    const tagTemplate = $.parseHTML(\n      await renderTemplate(\n        `${OSE.systemPath()}/templates/actors/partials/item-auto-tags-partial.html`,\n        { tags: OseItem.prototype.getAutoTagList.call(foundryDocument) }\n      )\n    );\n    $(item).append(tagTemplate);\n  });\n};\n","// Import Modules\nimport { OseItemSheet } from \"./module/item/item-sheet.js\";\nimport { OseActorSheetCharacter } from \"./module/actor/character-sheet.js\";\nimport { OseActorSheetMonster } from \"./module/actor/monster-sheet.js\";\nimport { preloadHandlebarsTemplates } from \"./module/preloadTemplates.js\";\nimport { OseActor } from \"./module/actor/entity.js\";\nimport { OseItem } from \"./module/item/entity.js\";\nimport { OSE } from \"./module/config.js\";\nimport { registerSettings } from \"./module/settings.js\";\nimport { registerHelpers } from \"./module/helpers.js\";\nimport { registerFVTTModuleAPIs } from \"./module/fvttModuleAPIs.js\";\nimport * as chat from \"./module/chat.js\";\nimport * as treasure from \"./module/treasure.js\";\nimport * as macros from \"./module/macros.js\";\nimport * as party from \"./module/party.js\";\nimport { OseCombat } from \"./module/combat.js\";\nimport * as renderList from \"./module/renderList.js\";\nimport { OsePartySheet } from \"./module/party/party-sheet.js\";\n\n/* -------------------------------------------- */\n/*  Foundry VTT Initialization                  */\n/* -------------------------------------------- */\n\nHooks.once(\"init\", async function () {\n  /**\n   * Set an initiative formula for the system\n   * @type {String}\n   */\n  CONFIG.Combat.initiative = {\n    formula: \"1d6 + @initiative.value\",\n    decimals: 2,\n  };\n\n  CONFIG.OSE = OSE;\n\n  game.ose = {\n    rollItemMacro: macros.rollItemMacro,\n    oseCombat: OseCombat,\n  };\n\n  // Init Party Sheet handler\n  OsePartySheet.init();\n\n  // Custom Handlebars helpers\n  registerHelpers();\n\n  // Register custom system settings\n  registerSettings();\n\n  // Register APIs of Foundry VTT Modules we explicitly support that provide custom hooks\n  registerFVTTModuleAPIs();\n\n  CONFIG.Actor.documentClass = OseActor;\n  CONFIG.Item.documentClass = OseItem;\n\n  // Register sheet application classes\n  Actors.unregisterSheet(\"core\", ActorSheet);\n  Actors.registerSheet(\"ose\", OseActorSheetCharacter, {\n    types: [\"character\"],\n    makeDefault: true,\n    label: \"OSE.SheetClassCharacter\",\n  });\n  Actors.registerSheet(\"ose\", OseActorSheetMonster, {\n    types: [\"monster\"],\n    makeDefault: true,\n    label: \"OSE.SheetClassMonster\",\n  });\n\n  Items.unregisterSheet(\"core\", ItemSheet);\n  Items.registerSheet(\"ose\", OseItemSheet, {\n    makeDefault: true,\n    label: \"OSE.SheetClassItem\",\n  });\n\n  await preloadHandlebarsTemplates();\n});\n\n/**\n * This function runs after game data has been requested and loaded from the servers, so entities exist\n */\nHooks.once(\"setup\", function () {\n  // Localize CONFIG objects once up-front\n  const toLocalize = [\n    \"saves_short\",\n    \"saves_long\",\n    \"scores\",\n    \"armor\",\n    \"colors\",\n    \"tags\",\n  ];\n  for (let o of toLocalize) {\n    CONFIG.OSE[o] = Object.entries(CONFIG.OSE[o]).reduce((obj, e) => {\n      obj[e[0]] = game.i18n.localize(e[1]);\n      return obj;\n    }, {});\n  }\n\n  // Custom languages\n  const languages = game.settings.get(\"ose\", \"languages\");\n  if (languages != \"\") {\n    const langArray = languages.split(\",\");\n    langArray.forEach((l, i) => (langArray[i] = l.trim()));\n    CONFIG.OSE.languages = langArray;\n  }\n});\n\nHooks.once(\"ready\", async () => {\n  Hooks.on(\"hotbarDrop\", (bar, data, slot) =>\n    macros.createOseMacro(data, slot)\n  );\n});\n\n// License info\nHooks.on(\"renderSidebarTab\", async (object, html) => {\n  if (object instanceof ActorDirectory) {\n    party.addControl(object, html);\n  }\n  if (object instanceof Settings) {\n    let gamesystem = html.find(\"#game-details\");\n    // SRD Link\n    let ose = gamesystem.find(\"h4\").last();\n    ose.append(\n      ` <sub><a href=\"https://oldschoolessentials.necroticgnome.com/srd/index.php\">SRD<a></sub>`\n    );\n\n    // License text\n    const template = `${OSE.systemPath()}/templates/chat/license.html`;\n    const rendered = await renderTemplate(template);\n    gamesystem.find(\".system\").append(rendered);\n\n    // User guide\n    let docs = html.find(\"button[data-action='docs']\");\n    const styling =\n      \"border:none;margin-right:2px;vertical-align:middle;margin-bottom:5px\";\n    $(\n      `<button data-action=\"userguide\"><img src='systems/ose/assets/dragon.png' width='16' height='16' style='${styling}'/>Old School Guide</button>`\n    ).insertAfter(docs);\n    html.find('button[data-action=\"userguide\"]').click((ev) => {\n      new FrameViewer(\"https://vttred.github.io/ose\", {\n        resizable: true,\n      }).render(true);\n    });\n  }\n});\n\nHooks.on(\"preCreateCombatant\", (combat, data, options, id) => {\n  let init = game.settings.get(\"ose\", \"initiative\");\n  if (init == \"group\") {\n    OseCombat.addCombatant(combat, data, options, id);\n  }\n});\n\nHooks.on(\"updateCombatant\", OseCombat.debounce(OseCombat.updateCombatant), 100);\nHooks.on(\"renderCombatTracker\", OseCombat.debounce(OseCombat.format, 100));\nHooks.on(\"preUpdateCombat\", OseCombat.preUpdateCombat);\nHooks.on(\n  \"getCombatTrackerEntryContext\",\n  OseCombat.debounce(OseCombat.addContextEntry, 100)\n);\n\nHooks.on(\"renderChatLog\", (app, html, data) => OseItem.chatListeners(html));\nHooks.on(\"getChatLogEntryContext\", chat.addChatMessageContextOptions);\nHooks.on(\"renderChatMessage\", chat.addChatMessageButtons);\nHooks.on(\"renderRollTableConfig\", treasure.augmentTable);\nHooks.on(\"updateActor\", party.update);\n\nHooks.on(\"renderCompendium\", renderList.RenderCompendium);\nHooks.on(\"renderSidebarDirectory\", renderList.RenderDirectory);\n\nHooks.on(\"OSE.Party.showSheet\", OsePartySheet.showPartySheet);\n"],"names":["macros.rollItemMacro","macros.createOseMacro","party.addControl","chat.addChatMessageContextOptions","chat.addChatMessageButtons","treasure.augmentTable","party.update","renderList.RenderCompendium","renderList.RenderDirectory"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}